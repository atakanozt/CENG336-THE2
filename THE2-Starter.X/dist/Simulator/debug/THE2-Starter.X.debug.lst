

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Apr 24 15:40:39 2025

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F8722 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	smallconst
    70  001000                     __psmallconst:
    71                           	callstack 0
    72  001000  00                 	db	0
    73  001001                     _SEVEN_SEG_DIGITS:
    74                           	callstack 0
    75  001001  3F                 	db	63
    76  001002  06                 	db	6
    77  001003  5B                 	db	91
    78  001004  4F                 	db	79
    79  001005  66                 	db	102
    80  001006  6D                 	db	109
    81  001007  7D                 	db	125
    82  001008  07                 	db	7
    83  001009  7F                 	db	127
    84  00100A  6F                 	db	111
    85  00100B                     __end_of_SEVEN_SEG_DIGITS:
    86                           	callstack 0
    87  0000                     _RCONbits	set	4048
    88  0000                     _T0CONbits	set	4053
    89  0000                     _TMR0L	set	4054
    90  0000                     _TMR0H	set	4055
    91  0000                     _T0CON	set	4053
    92  0000                     _INTCONbits	set	4082
    93  0000                     _INTCON2bits	set	4081
    94  0000                     _TRISB	set	3987
    95  0000                     _PORTJ	set	3976
    96  0000                     _PORTH	set	3975
    97  0000                     _TRISJ	set	3994
    98  0000                     _TRISH	set	3993
    99  0000                     _PORTD	set	3971
   100  0000                     _TRISD	set	3989
   101  0000                     _ADCON1	set	4033
   102  00100B  00                 	db	0	; dummy byte at the end
   103  0000                     
   104                           ; #config settings
   105                           
   106                           	psect	cinit
   107  00184A                     __pcinit:
   108                           	callstack 0
   109  00184A                     start_initialization:
   110                           	callstack 0
   111  00184A                     __initialization:
   112                           	callstack 0
   113                           
   114                           ; Clear objects allocated to COMRAM (27 bytes)
   115  00184A  EE00  F02C         	lfsr	0,__pbssCOMRAM
   116  00184E  0E1B               	movlw	27
   117  001850                     clear_0:
   118  001850  6AEE               	clrf	postinc0,c
   119  001852  06E8               	decf	wreg,f,c
   120  001854  E1FD               	bnz	clear_0
   121  001856                     end_of_initialization:
   122                           	callstack 0
   123  001856                     __end_of__initialization:
   124                           	callstack 0
   125  001856  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   126  001858  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   127  00185A  0100               	movlb	0
   128  00185C  EF72  F00B         	goto	_main	;jump to C main() function
   129                           
   130                           	psect	bssCOMRAM
   131  00002C                     __pbssCOMRAM:
   132                           	callstack 0
   133  00002C                     _timers:
   134                           	callstack 0
   135  00002C                     	ds	14
   136  00003A                     _gameState:
   137                           	callstack 0
   138  00003A                     	ds	12
   139  000046                     _currentDisplayIndex:
   140                           	callstack 0
   141  000046                     	ds	1
   142                           
   143                           	psect	cstackCOMRAM
   144  000001                     __pcstackCOMRAM:
   145                           	callstack 0
   146  000001                     ??_moveHippoDown:
   147  000001                     ?i2___lwdiv:
   148                           	callstack 0
   149  000001                     i2___lwdiv@dividend:
   150                           	callstack 0
   151                           
   152                           ; 2 bytes @ 0x0
   153  000001                     	ds	2
   154  000003                     i2___lwdiv@divisor:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x2
   158  000003                     	ds	2
   159  000005                     i2___lwdiv@quotient:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0x4
   163  000005                     	ds	2
   164  000007                     i2___lwdiv@counter:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x6
   168  000007                     	ds	1
   169  000008                     ?i2___lwmod:
   170                           	callstack 0
   171  000008                     i2___lwmod@dividend:
   172                           	callstack 0
   173                           
   174                           ; 2 bytes @ 0x7
   175  000008                     	ds	2
   176  00000A                     i2___lwmod@divisor:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0x9
   180  00000A                     	ds	2
   181  00000C                     i2___lwmod@counter:
   182                           	callstack 0
   183                           
   184                           ; 1 bytes @ 0xB
   185  00000C                     	ds	1
   186  00000D                     ??i2_updateDisplay:
   187                           
   188                           ; 1 bytes @ 0xC
   189  00000D                     	ds	2
   190  00000F                     i2updateDisplay@digit:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0xE
   194  00000F                     	ds	1
   195  000010                     i2updateDisplay@score:
   196                           	callstack 0
   197                           
   198                           ; 2 bytes @ 0xF
   199  000010                     	ds	2
   200  000012                     ??_HandleInterrupt:
   201                           
   202                           ; 1 bytes @ 0x11
   203  000012                     	ds	6
   204  000018                     ?___lwdiv:
   205                           	callstack 0
   206  000018                     ___lwdiv@dividend:
   207                           	callstack 0
   208                           
   209                           ; 2 bytes @ 0x17
   210  000018                     	ds	2
   211  00001A                     ___lwdiv@divisor:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0x19
   215  00001A                     	ds	2
   216  00001C                     ___lwdiv@quotient:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x1B
   220  00001C                     	ds	2
   221  00001E                     ___lwdiv@counter:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x1D
   225  00001E                     	ds	1
   226  00001F                     ??_updateGameDisplay:
   227  00001F                     ?___lwmod:
   228                           	callstack 0
   229  00001F                     ___lwmod@dividend:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x1E
   233  00001F                     	ds	2
   234  000021                     updateGameDisplay@blinkCycle:
   235                           	callstack 0
   236  000021                     ___lwmod@divisor:
   237                           	callstack 0
   238                           
   239                           ; 2 bytes @ 0x20
   240  000021                     	ds	1
   241  000022                     updateGameDisplay@display:
   242                           	callstack 0
   243                           
   244                           ; 1 bytes @ 0x21
   245  000022                     	ds	1
   246  000023                     updateGameDisplay@pos:
   247                           	callstack 0
   248  000023                     ___lwmod@counter:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x22
   252  000023                     	ds	1
   253  000024                     ??_updateDisplay:
   254  000024                     updateGameDisplay@i:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x23
   258  000024                     	ds	2
   259  000026                     updateDisplay@digit:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x25
   263  000026                     	ds	1
   264  000027                     updateDisplay@score:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x26
   268  000027                     	ds	2
   269  000029                     ??_main:
   270                           
   271                           ; 1 bytes @ 0x28
   272  000029                     	ds	1
   273  00002A                     main@i:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x29
   277  00002A                     	ds	2
   278                           
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 402 in file "main.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;  i               2   41[COMRAM] unsigned short 
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;Total ram usage:        3 bytes
   303 ;; Hardware stack levels required when called:    6
   304 ;; This function calls:
   305 ;;		_initializeGame
   306 ;;		_initializeSystem
   307 ;;		_updateDisplay
   308 ;;		_updateGameDisplay
   309 ;; This function is called by:
   310 ;;		Startup code after reset
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           	psect	text0
   315  0016E4                     __ptext0:
   316                           	callstack 0
   317  0016E4                     _main:
   318                           	callstack 25
   319  0016E4                     
   320                           ;main.c: 405:     initializeSystem();
   321  0016E4  EC9F  F00B         	call	_initializeSystem	;wreg free
   322                           
   323                           ;main.c: 408:     initializeGame();
   324  0016E8  ECD7  F00A         	call	_initializeGame	;wreg free
   325  0016EC                     
   326                           ;main.c: 411:     for (uint16_t i = 0; i < 200; i++) {
   327  0016EC  0E00               	movlw	0
   328  0016EE  6E2B               	movwf	(main@i+1)^0,c
   329  0016F0  0E00               	movlw	0
   330  0016F2  6E2A               	movwf	main@i^0,c
   331  0016F4                     l1265:
   332                           
   333                           ;main.c: 413:         updateDisplay();
   334  0016F4  EC06  F008         	call	_updateDisplay	;wreg free
   335  0016F8                     
   336                           ;main.c: 414:         _delay((unsigned long)((5)*((40UL * (1000UL * 1000UL))/4000.0)));
   337  0016F8  0E41               	movlw	65
   338  0016FA  6E29               	movwf	??_main^0,c
   339  0016FC  0EEE               	movlw	238
   340  0016FE                     u647:
   341  0016FE  2EE8               	decfsz	wreg,f,c
   342  001700  D7FE               	bra	u647
   343  001702  2E29               	decfsz	??_main^0,f,c
   344  001704  D7FC               	bra	u647
   345  001706  D000               	nop2	
   346  001708                     
   347                           ;main.c: 415:     }
   348  001708  4A2A               	infsnz	main@i^0,f,c
   349  00170A  2A2B               	incf	(main@i+1)^0,f,c
   350  00170C  502B               	movf	(main@i+1)^0,w,c
   351  00170E  E109               	bnz	u630
   352  001710  0EC8               	movlw	200
   353  001712  5C2A               	subwf	main@i^0,w,c
   354  001714  A0D8               	btfss	status,0,c
   355  001716  EF8F  F00B         	goto	u631
   356  00171A  EF91  F00B         	goto	u630
   357  00171E                     u631:
   358  00171E  EF7A  F00B         	goto	l1265
   359  001722                     u630:
   360  001722                     
   361                           ;main.c: 418:     T0CONbits.TMR0ON = 1;
   362  001722  8ED5               	bsf	213,7,c	;volatile
   363  001724                     l1273:
   364                           
   365                           ;main.c: 423:         updateGameDisplay();
   366  001724  ECD1  F009         	call	_updateGameDisplay	;wreg free
   367  001728                     
   368                           ;main.c: 426:         _delay((unsigned long)((1)*((40UL * (1000UL * 1000UL))/4000.0)));
   369  001728  0E0D               	movlw	13
   370  00172A  6E29               	movwf	??_main^0,c
   371  00172C  0EFC               	movlw	252
   372  00172E                     u657:
   373  00172E  2EE8               	decfsz	wreg,f,c
   374  001730  D7FE               	bra	u657
   375  001732  2E29               	decfsz	??_main^0,f,c
   376  001734  D7FC               	bra	u657
   377  001736  EF92  F00B         	goto	l1273
   378  00173A  EF07  F000         	goto	start
   379  00173E                     __end_of_main:
   380                           	callstack 0
   381                           
   382 ;; *************** function _updateGameDisplay *****************
   383 ;; Defined at:
   384 ;;		line 209 in file "main.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;  pos             1   34[COMRAM] unsigned char 
   389 ;;  blinkCycle      1   32[COMRAM] unsigned char 
   390 ;;  i               1   35[COMRAM] unsigned char 
   391 ;;  display         1   33[COMRAM] unsigned char 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, status,2, status,0, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   403 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   405 ;;Total ram usage:        6 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; Hardware stack levels required when called:    5
   408 ;; This function calls:
   409 ;;		___lwdiv
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text1
   416  0013A2                     __ptext1:
   417                           	callstack 0
   418  0013A2                     _updateGameDisplay:
   419                           	callstack 25
   420  0013A2                     
   421                           ;main.c: 210:     uint8_t display = 0x00;
   422  0013A2  0E00               	movlw	0
   423  0013A4  6E22               	movwf	updateGameDisplay@display^0,c
   424                           
   425                           ;main.c: 213:     if (gameState.prizeVisible) {
   426  0013A6  503C               	movf	(_gameState+2)^0,w,c
   427  0013A8  B4D8               	btfsc	status,2,c
   428  0013AA  EFD9  F009         	goto	u531
   429  0013AE  EFDB  F009         	goto	u530
   430  0013B2                     u531:
   431  0013B2  EFDC  F009         	goto	l1191
   432  0013B6                     u530:
   433  0013B6                     
   434                           ;main.c: 214:         display |= (1 << 0);
   435  0013B6  8022               	bsf	updateGameDisplay@display^0,0,c
   436  0013B8                     l1191:
   437                           
   438                           ;main.c: 218:     for (uint8_t i = 0; i < gameState.hippoSize; i++) {
   439  0013B8  0E00               	movlw	0
   440  0013BA  6E24               	movwf	updateGameDisplay@i^0,c
   441  0013BC  EFFA  F009         	goto	l1199
   442  0013C0                     l1193:
   443                           
   444                           ;main.c: 219:         uint8_t pos = gameState.hippoPosition + i;
   445  0013C0  503B               	movf	(_gameState+1)^0,w,c
   446  0013C2  2424               	addwf	updateGameDisplay@i^0,w,c
   447  0013C4  6E23               	movwf	updateGameDisplay@pos^0,c
   448                           
   449                           ;main.c: 220:         if (pos <= 7) {
   450  0013C6  0E08               	movlw	8
   451  0013C8  6023               	cpfslt	updateGameDisplay@pos^0,c
   452  0013CA  EFE9  F009         	goto	u541
   453  0013CE  EFEB  F009         	goto	u540
   454  0013D2                     u541:
   455  0013D2  EFF9  F009         	goto	l1197
   456  0013D6                     u540:
   457  0013D6                     
   458                           ;main.c: 221:             display |= (1 << pos);
   459  0013D6  C023  F01F         	movff	updateGameDisplay@pos,??_updateGameDisplay
   460  0013DA  0E01               	movlw	1
   461  0013DC  6E20               	movwf	(??_updateGameDisplay+1)^0,c
   462  0013DE  2A1F               	incf	??_updateGameDisplay^0,f,c
   463  0013E0  EFF4  F009         	goto	u554
   464  0013E4                     u555:
   465  0013E4  90D8               	bcf	status,0,c
   466  0013E6  3620               	rlcf	(??_updateGameDisplay+1)^0,f,c
   467  0013E8                     u554:
   468  0013E8  2E1F               	decfsz	??_updateGameDisplay^0,f,c
   469  0013EA  EFF2  F009         	goto	u555
   470  0013EE  5020               	movf	(??_updateGameDisplay+1)^0,w,c
   471  0013F0  1222               	iorwf	updateGameDisplay@display^0,f,c
   472  0013F2                     l1197:
   473                           
   474                           ;main.c: 223:     }
   475  0013F2  2A24               	incf	updateGameDisplay@i^0,f,c
   476  0013F4                     l1199:
   477  0013F4  503A               	movf	_gameState^0,w,c
   478  0013F6  5C24               	subwf	updateGameDisplay@i^0,w,c
   479  0013F8  A0D8               	btfss	status,0,c
   480  0013FA  EF01  F00A         	goto	u561
   481  0013FE  EF03  F00A         	goto	u560
   482  001402                     u561:
   483  001402  EFE0  F009         	goto	l1193
   484  001406                     u560:
   485  001406                     
   486                           ;main.c: 226:     if (gameState.gameState == 1) {
   487  001406  0441               	decf	(_gameState+7)^0,w,c
   488  001408  A4D8               	btfss	status,2,c
   489  00140A  EF09  F00A         	goto	u571
   490  00140E  EF0B  F00A         	goto	u570
   491  001412                     u571:
   492  001412  EF23  F00A         	goto	l1211
   493  001416                     u570:
   494  001416                     
   495                           ;main.c: 228:         uint8_t blinkCycle = timers.totalResetTime / 80;
   496  001416  C034  F018         	movff	_timers+8,___lwdiv@dividend
   497  00141A  C035  F019         	movff	_timers+9,___lwdiv@dividend+1
   498  00141E  0E00               	movlw	0
   499  001420  6E1B               	movwf	(___lwdiv@divisor+1)^0,c
   500  001422  0E50               	movlw	80
   501  001424  6E1A               	movwf	___lwdiv@divisor^0,c
   502  001426  EC63  F00A         	call	___lwdiv	;wreg free
   503  00142A  5018               	movf	?___lwdiv^0,w,c
   504  00142C  6E21               	movwf	updateGameDisplay@blinkCycle^0,c
   505  00142E                     
   506                           ;main.c: 229:         if (blinkCycle % 2 == 0) {
   507  00142E  B021               	btfsc	updateGameDisplay@blinkCycle^0,0,c
   508  001430  EF1C  F00A         	goto	u581
   509  001434  EF1E  F00A         	goto	u580
   510  001438                     u581:
   511  001438  EF21  F00A         	goto	l1209
   512  00143C                     u580:
   513  00143C                     
   514                           ;main.c: 230:             display = 0xFF;
   515  00143C  6822               	setf	updateGameDisplay@display^0,c
   516                           
   517                           ;main.c: 231:         } else {
   518  00143E  EF23  F00A         	goto	l1211
   519  001442                     l1209:
   520                           
   521                           ;main.c: 232:             display = 0x00;
   522  001442  0E00               	movlw	0
   523  001444  6E22               	movwf	updateGameDisplay@display^0,c
   524  001446                     l1211:
   525                           
   526                           ;main.c: 237:     PORTD = display;
   527  001446  C022  FF83         	movff	updateGameDisplay@display,3971	;volatile
   528  00144A  0012               	return		;funcret
   529  00144C                     __end_of_updateGameDisplay:
   530                           	callstack 0
   531                           
   532 ;; *************** function _updateDisplay *****************
   533 ;; Defined at:
   534 ;;		line 174 in file "main.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  score           2   38[COMRAM] unsigned short 
   539 ;;  digit           1   37[COMRAM] unsigned char 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;Total ram usage:        5 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; Hardware stack levels required when called:    5
   556 ;; This function calls:
   557 ;;		___lwdiv
   558 ;;		___lwmod
   559 ;; This function is called by:
   560 ;;		_main
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text2
   565  00100C                     __ptext2:
   566                           	callstack 0
   567  00100C                     _updateDisplay:
   568                           	callstack 25
   569  00100C                     
   570                           ;main.c: 176:     PORTH = 0x00;
   571  00100C  0E00               	movlw	0
   572  00100E  6E87               	movwf	135,c	;volatile
   573  001010                     
   574                           ;main.c: 179:     uint16_t score = gameState.totalScore;
   575  001010  C03F  F027         	movff	_gameState+5,updateDisplay@score
   576  001014  C040  F028         	movff	_gameState+6,updateDisplay@score+1
   577                           
   578                           ;main.c: 180:     uint8_t digit = 0;
   579  001018  0E00               	movlw	0
   580  00101A  6E26               	movwf	updateDisplay@digit^0,c
   581                           
   582                           ;main.c: 183:     switch (currentDisplayIndex) {
   583  00101C  EF66  F008         	goto	l1175
   584  001020                     l1165:
   585                           
   586                           ;main.c: 185:             digit = score % 10;
   587  001020  C027  F01F         	movff	updateDisplay@score,___lwmod@dividend
   588  001024  C028  F020         	movff	updateDisplay@score+1,___lwmod@dividend+1
   589  001028  0E00               	movlw	0
   590  00102A  6E22               	movwf	(___lwmod@divisor+1)^0,c
   591  00102C  0E0A               	movlw	10
   592  00102E  6E21               	movwf	___lwmod@divisor^0,c
   593  001030  EC0E  F00B         	call	___lwmod	;wreg free
   594  001034  501F               	movf	?___lwmod^0,w,c
   595  001036  6E26               	movwf	updateDisplay@digit^0,c
   596                           
   597                           ;main.c: 186:             break;
   598  001038  EF83  F008         	goto	l1177
   599  00103C                     l1167:
   600                           
   601                           ;main.c: 188:             digit = (score / 10) % 10;
   602  00103C  0E00               	movlw	0
   603  00103E  6E1B               	movwf	(___lwdiv@divisor+1)^0,c
   604  001040  0E0A               	movlw	10
   605  001042  6E1A               	movwf	___lwdiv@divisor^0,c
   606  001044  C027  F018         	movff	updateDisplay@score,___lwdiv@dividend
   607  001048  C028  F019         	movff	updateDisplay@score+1,___lwdiv@dividend+1
   608  00104C  EC63  F00A         	call	___lwdiv	;wreg free
   609  001050  C018  F01F         	movff	?___lwdiv,___lwmod@dividend
   610  001054  C019  F020         	movff	?___lwdiv+1,___lwmod@dividend+1
   611  001058  0E00               	movlw	0
   612  00105A  6E22               	movwf	(___lwmod@divisor+1)^0,c
   613  00105C  0E0A               	movlw	10
   614  00105E  6E21               	movwf	___lwmod@divisor^0,c
   615  001060  EC0E  F00B         	call	___lwmod	;wreg free
   616  001064  501F               	movf	?___lwmod^0,w,c
   617  001066  6E26               	movwf	updateDisplay@digit^0,c
   618                           
   619                           ;main.c: 189:             break;
   620  001068  EF83  F008         	goto	l1177
   621  00106C                     l1169:
   622                           
   623                           ;main.c: 191:             digit = (score / 100) % 10;
   624  00106C  0E00               	movlw	0
   625  00106E  6E1B               	movwf	(___lwdiv@divisor+1)^0,c
   626  001070  0E64               	movlw	100
   627  001072  6E1A               	movwf	___lwdiv@divisor^0,c
   628  001074  C027  F018         	movff	updateDisplay@score,___lwdiv@dividend
   629  001078  C028  F019         	movff	updateDisplay@score+1,___lwdiv@dividend+1
   630  00107C  EC63  F00A         	call	___lwdiv	;wreg free
   631  001080  C018  F01F         	movff	?___lwdiv,___lwmod@dividend
   632  001084  C019  F020         	movff	?___lwdiv+1,___lwmod@dividend+1
   633  001088  0E00               	movlw	0
   634  00108A  6E22               	movwf	(___lwmod@divisor+1)^0,c
   635  00108C  0E0A               	movlw	10
   636  00108E  6E21               	movwf	___lwmod@divisor^0,c
   637  001090  EC0E  F00B         	call	___lwmod	;wreg free
   638  001094  501F               	movf	?___lwmod^0,w,c
   639  001096  6E26               	movwf	updateDisplay@digit^0,c
   640                           
   641                           ;main.c: 192:             break;
   642  001098  EF83  F008         	goto	l1177
   643  00109C                     l1171:
   644                           
   645                           ;main.c: 194:             digit = (score / 1000) % 10;
   646  00109C  0E03               	movlw	3
   647  00109E  6E1B               	movwf	(___lwdiv@divisor+1)^0,c
   648  0010A0  0EE8               	movlw	232
   649  0010A2  6E1A               	movwf	___lwdiv@divisor^0,c
   650  0010A4  C027  F018         	movff	updateDisplay@score,___lwdiv@dividend
   651  0010A8  C028  F019         	movff	updateDisplay@score+1,___lwdiv@dividend+1
   652  0010AC  EC63  F00A         	call	___lwdiv	;wreg free
   653  0010B0  C018  F01F         	movff	?___lwdiv,___lwmod@dividend
   654  0010B4  C019  F020         	movff	?___lwdiv+1,___lwmod@dividend+1
   655  0010B8  0E00               	movlw	0
   656  0010BA  6E22               	movwf	(___lwmod@divisor+1)^0,c
   657  0010BC  0E0A               	movlw	10
   658  0010BE  6E21               	movwf	___lwmod@divisor^0,c
   659  0010C0  EC0E  F00B         	call	___lwmod	;wreg free
   660  0010C4  501F               	movf	?___lwmod^0,w,c
   661  0010C6  6E26               	movwf	updateDisplay@digit^0,c
   662                           
   663                           ;main.c: 195:             break;
   664  0010C8  EF83  F008         	goto	l1177
   665  0010CC                     l1175:
   666  0010CC  5046               	movf	_currentDisplayIndex^0,w,c
   667  0010CE  6E24               	movwf	??_updateDisplay^0,c
   668  0010D0  6A25               	clrf	(??_updateDisplay+1)^0,c
   669                           
   670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   671                           ; Switch size 1, requested type "simple"
   672                           ; Number of cases is 1, Range of values is 0 to 0
   673                           ; switch strategies available:
   674                           ; Name         Instructions Cycles
   675                           ; simple_byte            4     3 (average)
   676                           ;	Chosen strategy is simple_byte
   677  0010D2  5025               	movf	(??_updateDisplay+1)^0,w,c
   678  0010D4  0A00               	xorlw	0	; case 0
   679  0010D6  B4D8               	btfsc	status,2,c
   680  0010D8  EF70  F008         	goto	l1285
   681  0010DC  EF83  F008         	goto	l1177
   682  0010E0                     l1285:
   683                           
   684                           ; Switch size 1, requested type "simple"
   685                           ; Number of cases is 4, Range of values is 0 to 3
   686                           ; switch strategies available:
   687                           ; Name         Instructions Cycles
   688                           ; simple_byte           13     7 (average)
   689                           ;	Chosen strategy is simple_byte
   690  0010E0  5024               	movf	??_updateDisplay^0,w,c
   691  0010E2  0A00               	xorlw	0	; case 0
   692  0010E4  B4D8               	btfsc	status,2,c
   693  0010E6  EF10  F008         	goto	l1165
   694  0010EA  0A01               	xorlw	1	; case 1
   695  0010EC  B4D8               	btfsc	status,2,c
   696  0010EE  EF1E  F008         	goto	l1167
   697  0010F2  0A03               	xorlw	3	; case 2
   698  0010F4  B4D8               	btfsc	status,2,c
   699  0010F6  EF36  F008         	goto	l1169
   700  0010FA  0A01               	xorlw	1	; case 3
   701  0010FC  B4D8               	btfsc	status,2,c
   702  0010FE  EF4E  F008         	goto	l1171
   703  001102  EF83  F008         	goto	l1177
   704  001106                     l1177:
   705                           
   706                           ;main.c: 199:     PORTJ = SEVEN_SEG_DIGITS[digit];
   707  001106  0E01               	movlw	low _SEVEN_SEG_DIGITS
   708  001108  2426               	addwf	updateDisplay@digit^0,w,c
   709  00110A  6EF6               	movwf	tblptrl,c
   710  00110C  6AF7               	clrf	tblptrh,c
   711  00110E  0E10               	movlw	high _SEVEN_SEG_DIGITS
   712  001110  22F7               	addwfc	tblptrh,f,c
   713  001112                     	if	1	;There are 3 active tblptr bytes
   714  001112  6AF8               	clrf	tblptru,c
   715  001114  0E00               	movlw	low (__mediumconst shr (0+16))
   716  001116  22F8               	addwfc	tblptru,f,c
   717  001118                     	endif
   718  001118  0008               	tblrd		*
   719  00111A  CFF5 FF88          	movff	tablat,3976	;volatile
   720  00111E                     
   721                           ;main.c: 202:     PORTH = (1 << currentDisplayIndex);
   722  00111E  C046  F024         	movff	_currentDisplayIndex,??_updateDisplay
   723  001122  0E01               	movlw	1
   724  001124  6E25               	movwf	(??_updateDisplay+1)^0,c
   725  001126  2A24               	incf	??_updateDisplay^0,f,c
   726  001128  EF98  F008         	goto	u524
   727  00112C                     u525:
   728  00112C  90D8               	bcf	status,0,c
   729  00112E  3625               	rlcf	(??_updateDisplay+1)^0,f,c
   730  001130                     u524:
   731  001130  2E24               	decfsz	??_updateDisplay^0,f,c
   732  001132  EF96  F008         	goto	u525
   733  001136  5025               	movf	(??_updateDisplay+1)^0,w,c
   734  001138  6E87               	movwf	135,c	;volatile
   735  00113A                     
   736                           ;main.c: 205:     currentDisplayIndex = (currentDisplayIndex + 1) % 4;
   737  00113A  2846               	incf	_currentDisplayIndex^0,w,c
   738  00113C  0B03               	andlw	3
   739  00113E  6E46               	movwf	_currentDisplayIndex^0,c
   740  001140  0012               	return		;funcret
   741  001142                     __end_of_updateDisplay:
   742                           	callstack 0
   743                           
   744 ;; *************** function ___lwmod *****************
   745 ;; Defined at:
   746 ;;		line 7 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/lwmod.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  dividend        2   30[COMRAM] unsigned int 
   749 ;;  divisor         2   32[COMRAM] unsigned int 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  counter         1   34[COMRAM] unsigned char 
   752 ;; Return value:  Size  Location     Type
   753 ;;                  2   30[COMRAM] unsigned int 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;Total ram usage:        5 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    4
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_updateDisplay
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text3
   776  00161C                     __ptext3:
   777                           	callstack 0
   778  00161C                     ___lwmod:
   779                           	callstack 25
   780  00161C  5021               	movf	___lwmod@divisor^0,w,c
   781  00161E  1022               	iorwf	(___lwmod@divisor+1)^0,w,c
   782  001620  B4D8               	btfsc	status,2,c
   783  001622  EF15  F00B         	goto	u431
   784  001626  EF17  F00B         	goto	u430
   785  00162A                     u431:
   786  00162A  EF3B  F00B         	goto	l623
   787  00162E                     u430:
   788  00162E  0E01               	movlw	1
   789  001630  6E23               	movwf	___lwmod@counter^0,c
   790  001632  EF1F  F00B         	goto	l1113
   791  001636                     l1111:
   792  001636  90D8               	bcf	status,0,c
   793  001638  3621               	rlcf	___lwmod@divisor^0,f,c
   794  00163A  3622               	rlcf	(___lwmod@divisor+1)^0,f,c
   795  00163C  2A23               	incf	___lwmod@counter^0,f,c
   796  00163E                     l1113:
   797  00163E  AE22               	btfss	(___lwmod@divisor+1)^0,7,c
   798  001640  EF24  F00B         	goto	u441
   799  001644  EF26  F00B         	goto	u440
   800  001648                     u441:
   801  001648  EF1B  F00B         	goto	l1111
   802  00164C                     u440:
   803  00164C                     l1115:
   804  00164C  5021               	movf	___lwmod@divisor^0,w,c
   805  00164E  5C1F               	subwf	___lwmod@dividend^0,w,c
   806  001650  5022               	movf	(___lwmod@divisor+1)^0,w,c
   807  001652  5820               	subwfb	(___lwmod@dividend+1)^0,w,c
   808  001654  A0D8               	btfss	status,0,c
   809  001656  EF2F  F00B         	goto	u451
   810  00165A  EF31  F00B         	goto	u450
   811  00165E                     u451:
   812  00165E  EF35  F00B         	goto	l1119
   813  001662                     u450:
   814  001662  5021               	movf	___lwmod@divisor^0,w,c
   815  001664  5E1F               	subwf	___lwmod@dividend^0,f,c
   816  001666  5022               	movf	(___lwmod@divisor+1)^0,w,c
   817  001668  5A20               	subwfb	(___lwmod@dividend+1)^0,f,c
   818  00166A                     l1119:
   819  00166A  90D8               	bcf	status,0,c
   820  00166C  3222               	rrcf	(___lwmod@divisor+1)^0,f,c
   821  00166E  3221               	rrcf	___lwmod@divisor^0,f,c
   822  001670  2E23               	decfsz	___lwmod@counter^0,f,c
   823  001672  EF26  F00B         	goto	l1115
   824  001676                     l623:
   825  001676  C01F  F01F         	movff	___lwmod@dividend,?___lwmod
   826  00167A  C020  F020         	movff	___lwmod@dividend+1,?___lwmod+1
   827  00167E  0012               	return		;funcret
   828  001680                     __end_of___lwmod:
   829                           	callstack 0
   830                           
   831 ;; *************** function ___lwdiv *****************
   832 ;; Defined at:
   833 ;;		line 7 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/lwdiv.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  dividend        2   23[COMRAM] unsigned int 
   836 ;;  divisor         2   25[COMRAM] unsigned int 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  quotient        2   27[COMRAM] unsigned int 
   839 ;;  counter         1   29[COMRAM] unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  2   23[COMRAM] unsigned int 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;Total ram usage:        7 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; Hardware stack levels required when called:    4
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_updateDisplay
   860 ;;		_updateGameDisplay
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text4
   865  0014C6                     __ptext4:
   866                           	callstack 0
   867  0014C6                     ___lwdiv:
   868                           	callstack 25
   869  0014C6  0E00               	movlw	0
   870  0014C8  6E1D               	movwf	(___lwdiv@quotient+1)^0,c
   871  0014CA  0E00               	movlw	0
   872  0014CC  6E1C               	movwf	___lwdiv@quotient^0,c
   873  0014CE  501A               	movf	___lwdiv@divisor^0,w,c
   874  0014D0  101B               	iorwf	(___lwdiv@divisor+1)^0,w,c
   875  0014D2  B4D8               	btfsc	status,2,c
   876  0014D4  EF6E  F00A         	goto	u401
   877  0014D8  EF70  F00A         	goto	u400
   878  0014DC                     u401:
   879  0014DC  EF98  F00A         	goto	l613
   880  0014E0                     u400:
   881  0014E0  0E01               	movlw	1
   882  0014E2  6E1E               	movwf	___lwdiv@counter^0,c
   883  0014E4  EF78  F00A         	goto	l1093
   884  0014E8                     l1091:
   885  0014E8  90D8               	bcf	status,0,c
   886  0014EA  361A               	rlcf	___lwdiv@divisor^0,f,c
   887  0014EC  361B               	rlcf	(___lwdiv@divisor+1)^0,f,c
   888  0014EE  2A1E               	incf	___lwdiv@counter^0,f,c
   889  0014F0                     l1093:
   890  0014F0  AE1B               	btfss	(___lwdiv@divisor+1)^0,7,c
   891  0014F2  EF7D  F00A         	goto	u411
   892  0014F6  EF7F  F00A         	goto	u410
   893  0014FA                     u411:
   894  0014FA  EF74  F00A         	goto	l1091
   895  0014FE                     u410:
   896  0014FE                     l1095:
   897  0014FE  90D8               	bcf	status,0,c
   898  001500  361C               	rlcf	___lwdiv@quotient^0,f,c
   899  001502  361D               	rlcf	(___lwdiv@quotient+1)^0,f,c
   900  001504  501A               	movf	___lwdiv@divisor^0,w,c
   901  001506  5C18               	subwf	___lwdiv@dividend^0,w,c
   902  001508  501B               	movf	(___lwdiv@divisor+1)^0,w,c
   903  00150A  5819               	subwfb	(___lwdiv@dividend+1)^0,w,c
   904  00150C  A0D8               	btfss	status,0,c
   905  00150E  EF8B  F00A         	goto	u421
   906  001512  EF8D  F00A         	goto	u420
   907  001516                     u421:
   908  001516  EF92  F00A         	goto	l1103
   909  00151A                     u420:
   910  00151A  501A               	movf	___lwdiv@divisor^0,w,c
   911  00151C  5E18               	subwf	___lwdiv@dividend^0,f,c
   912  00151E  501B               	movf	(___lwdiv@divisor+1)^0,w,c
   913  001520  5A19               	subwfb	(___lwdiv@dividend+1)^0,f,c
   914  001522  801C               	bsf	___lwdiv@quotient^0,0,c
   915  001524                     l1103:
   916  001524  90D8               	bcf	status,0,c
   917  001526  321B               	rrcf	(___lwdiv@divisor+1)^0,f,c
   918  001528  321A               	rrcf	___lwdiv@divisor^0,f,c
   919  00152A  2E1E               	decfsz	___lwdiv@counter^0,f,c
   920  00152C  EF7F  F00A         	goto	l1095
   921  001530                     l613:
   922  001530  C01C  F018         	movff	___lwdiv@quotient,?___lwdiv
   923  001534  C01D  F019         	movff	___lwdiv@quotient+1,?___lwdiv+1
   924  001538  0012               	return		;funcret
   925  00153A                     __end_of___lwdiv:
   926                           	callstack 0
   927                           
   928 ;; *************** function _initializeSystem *****************
   929 ;; Defined at:
   930 ;;		line 114 in file "main.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, status,2
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;Total ram usage:        0 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; Hardware stack levels required when called:    4
   951 ;; This function calls:
   952 ;;		Nothing
   953 ;; This function is called by:
   954 ;;		_main
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text5
   959  00173E                     __ptext5:
   960                           	callstack 0
   961  00173E                     _initializeSystem:
   962                           	callstack 26
   963  00173E                     
   964                           ;main.c: 116:     ADCON1 = 0x0F;
   965  00173E  0E0F               	movlw	15
   966  001740  6EC1               	movwf	193,c	;volatile
   967                           
   968                           ;main.c: 119:     TRISD = 0x00;
   969  001742  0E00               	movlw	0
   970  001744  6E95               	movwf	149,c	;volatile
   971                           
   972                           ;main.c: 120:     PORTD = 0x00;
   973  001746  0E00               	movlw	0
   974  001748  6E83               	movwf	131,c	;volatile
   975                           
   976                           ;main.c: 123:     TRISH = 0x00;
   977  00174A  0E00               	movlw	0
   978  00174C  6E99               	movwf	153,c	;volatile
   979                           
   980                           ;main.c: 124:     TRISJ = 0x00;
   981  00174E  0E00               	movlw	0
   982  001750  6E9A               	movwf	154,c	;volatile
   983                           
   984                           ;main.c: 125:     PORTH = 0x00;
   985  001752  0E00               	movlw	0
   986  001754  6E87               	movwf	135,c	;volatile
   987                           
   988                           ;main.c: 126:     PORTJ = 0x00;
   989  001756  0E00               	movlw	0
   990  001758  6E88               	movwf	136,c	;volatile
   991                           
   992                           ;main.c: 129:     TRISB = 0x01;
   993  00175A  0E01               	movlw	1
   994  00175C  6E93               	movwf	147,c	;volatile
   995  00175E                     
   996                           ;main.c: 132:     INTCON2bits.INTEDG0 = 1;
   997  00175E  8CF1               	bsf	241,6,c	;volatile
   998  001760                     
   999                           ;main.c: 133:     INTCONbits.INT0IE = 1;
  1000  001760  88F2               	bsf	242,4,c	;volatile
  1001  001762                     
  1002                           ;main.c: 134:     INTCONbits.INT0IF = 0;
  1003  001762  92F2               	bcf	242,1,c	;volatile
  1004                           
  1005                           ;main.c: 137:     T0CON = 0x08;
  1006  001764  0E08               	movlw	8
  1007  001766  6ED5               	movwf	213,c	;volatile
  1008                           
  1009                           ;main.c: 138:     TMR0H = 0x3C;
  1010  001768  0E3C               	movlw	60
  1011  00176A  6ED7               	movwf	215,c	;volatile
  1012                           
  1013                           ;main.c: 139:     TMR0L = 0xAF;
  1014  00176C  0EAF               	movlw	175
  1015  00176E  6ED6               	movwf	214,c	;volatile
  1016  001770                     
  1017                           ;main.c: 140:     T0CONbits.PSA = 0;
  1018  001770  96D5               	bcf	213,3,c	;volatile
  1019                           
  1020                           ;main.c: 141:     T0CONbits.T0PS = 0b010;
  1021  001772  50D5               	movf	213,w,c	;volatile
  1022  001774  0BF8               	andlw	-8
  1023  001776  0902               	iorlw	2
  1024  001778  6ED5               	movwf	213,c	;volatile
  1025  00177A                     
  1026                           ;main.c: 142:     INTCONbits.TMR0IE = 1;
  1027  00177A  8AF2               	bsf	242,5,c	;volatile
  1028  00177C                     
  1029                           ;main.c: 143:     INTCONbits.TMR0IF = 0;
  1030  00177C  94F2               	bcf	242,2,c	;volatile
  1031  00177E                     
  1032                           ;main.c: 146:     RCONbits.IPEN = 1;
  1033  00177E  8ED0               	bsf	208,7,c	;volatile
  1034  001780                     
  1035                           ;main.c: 147:     INTCONbits.GIEH = 1;
  1036  001780  8EF2               	bsf	242,7,c	;volatile
  1037  001782  0012               	return		;funcret
  1038  001784                     __end_of_initializeSystem:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _initializeGame *****************
  1042 ;; Defined at:
  1043 ;;		line 151 in file "main.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    4
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text6
  1072  0015AE                     __ptext6:
  1073                           	callstack 0
  1074  0015AE                     _initializeGame:
  1075                           	callstack 26
  1076  0015AE                     
  1077                           ;main.c: 153:     gameState.hippoSize = 1;
  1078  0015AE  0E01               	movlw	1
  1079  0015B0  6E3A               	movwf	_gameState^0,c
  1080                           
  1081                           ;main.c: 154:     gameState.hippoPosition = 7;
  1082  0015B2  0E07               	movlw	7
  1083  0015B4  6E3B               	movwf	(_gameState+1)^0,c
  1084                           
  1085                           ;main.c: 155:     gameState.prizeVisible = 1;
  1086  0015B6  0E01               	movlw	1
  1087  0015B8  6E3C               	movwf	(_gameState+2)^0,c
  1088                           
  1089                           ;main.c: 156:     gameState.currentScore = 100;
  1090  0015BA  0E00               	movlw	0
  1091  0015BC  6E3E               	movwf	(_gameState+4)^0,c
  1092  0015BE  0E64               	movlw	100
  1093  0015C0  6E3D               	movwf	(_gameState+3)^0,c
  1094                           
  1095                           ;main.c: 157:     gameState.totalScore = 0;
  1096  0015C2  0E00               	movlw	0
  1097  0015C4  6E40               	movwf	(_gameState+6)^0,c
  1098  0015C6  0E00               	movlw	0
  1099  0015C8  6E3F               	movwf	(_gameState+5)^0,c
  1100                           
  1101                           ;main.c: 158:     gameState.gameState = 0;
  1102  0015CA  0E00               	movlw	0
  1103  0015CC  6E41               	movwf	(_gameState+7)^0,c
  1104                           
  1105                           ;main.c: 159:     gameState.roundStartTime = 0;
  1106  0015CE  0E00               	movlw	0
  1107  0015D0  6E42               	movwf	(_gameState+8)^0,c
  1108  0015D2  0E00               	movlw	0
  1109  0015D4  6E43               	movwf	(_gameState+9)^0,c
  1110  0015D6  0E00               	movlw	0
  1111  0015D8  6E44               	movwf	(_gameState+10)^0,c
  1112  0015DA  0E00               	movlw	0
  1113  0015DC  6E45               	movwf	(_gameState+11)^0,c
  1114                           
  1115                           ;main.c: 162:     timers.gravityCounter = 0;
  1116  0015DE  0E00               	movlw	0
  1117  0015E0  6E2D               	movwf	(_timers+1)^0,c
  1118  0015E2  0E00               	movlw	0
  1119  0015E4  6E2C               	movwf	_timers^0,c
  1120                           
  1121                           ;main.c: 163:     timers.blinkCounter = 0;
  1122  0015E6  0E00               	movlw	0
  1123  0015E8  6E2F               	movwf	(_timers+3)^0,c
  1124  0015EA  0E00               	movlw	0
  1125  0015EC  6E2E               	movwf	(_timers+2)^0,c
  1126                           
  1127                           ;main.c: 164:     timers.scoreCounter = 0;
  1128  0015EE  0E00               	movlw	0
  1129  0015F0  6E31               	movwf	(_timers+5)^0,c
  1130  0015F2  0E00               	movlw	0
  1131  0015F4  6E30               	movwf	(_timers+4)^0,c
  1132                           
  1133                           ;main.c: 165:     timers.resetCounter = 0;
  1134  0015F6  0E00               	movlw	0
  1135  0015F8  6E33               	movwf	(_timers+7)^0,c
  1136  0015FA  0E00               	movlw	0
  1137  0015FC  6E32               	movwf	(_timers+6)^0,c
  1138                           
  1139                           ;main.c: 166:     timers.totalResetTime = 0;
  1140  0015FE  0E00               	movlw	0
  1141  001600  6E35               	movwf	(_timers+9)^0,c
  1142  001602  0E00               	movlw	0
  1143  001604  6E34               	movwf	(_timers+8)^0,c
  1144                           
  1145                           ;main.c: 167:     timers.totalTime = 0;
  1146  001606  0E00               	movlw	0
  1147  001608  6E36               	movwf	(_timers+10)^0,c
  1148  00160A  0E00               	movlw	0
  1149  00160C  6E37               	movwf	(_timers+11)^0,c
  1150  00160E  0E00               	movlw	0
  1151  001610  6E38               	movwf	(_timers+12)^0,c
  1152  001612  0E00               	movlw	0
  1153  001614  6E39               	movwf	(_timers+13)^0,c
  1154                           
  1155                           ;main.c: 170:     PORTD = 0x00;
  1156  001616  0E00               	movlw	0
  1157  001618  6E83               	movwf	131,c	;volatile
  1158  00161A  0012               	return		;funcret
  1159  00161C                     __end_of_initializeGame:
  1160                           	callstack 0
  1161                           
  1162 ;; *************** function _HandleInterrupt *****************
  1163 ;; Defined at:
  1164 ;;		line 369 in file "main.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;Total ram usage:        6 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    3
  1185 ;; This function calls:
  1186 ;;		_moveHippoUp
  1187 ;;		_processTimerTick
  1188 ;;		i2_updateDisplay
  1189 ;; This function is called by:
  1190 ;;		Interrupt level 2
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	intcode
  1195  000008                     __pintcode:
  1196                           	callstack 0
  1197  000008                     _HandleInterrupt:
  1198                           	callstack 25
  1199                           
  1200                           ;incstack = 0
  1201  000008  8247               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1202  00000A  ED26  F00A         	call	int_func,f	;refresh shadow registers
  1203                           
  1204                           	psect	intcode_body
  1205  00144C                     __pintcode_body:
  1206                           	callstack 25
  1207  00144C                     int_func:
  1208                           	callstack 25
  1209  00144C  0006               	pop		; remove dummy address from shadow register refresh
  1210  00144E  CFD9 F012          	movff	fsr2l,??_HandleInterrupt
  1211  001452  CFDA F013          	movff	fsr2h,??_HandleInterrupt+1
  1212  001456  CFF6 F014          	movff	tblptrl,??_HandleInterrupt+2
  1213  00145A  CFF7 F015          	movff	tblptrh,??_HandleInterrupt+3
  1214  00145E  CFF8 F016          	movff	tblptru,??_HandleInterrupt+4
  1215  001462  CFF5 F017          	movff	tablat,??_HandleInterrupt+5
  1216  001466                     
  1217                           ;main.c: 372:     if (INTCONbits.INT0IF) {
  1218  001466  A2F2               	btfss	242,1,c	;volatile
  1219  001468  EF38  F00A         	goto	i2u60_41
  1220  00146C  EF3A  F00A         	goto	i2u60_40
  1221  001470                     i2u60_41:
  1222  001470  EF45  F00A         	goto	i2l1247
  1223  001474                     i2u60_40:
  1224  001474                     
  1225                           ;main.c: 374:         if (gameState.gameState == 0) {
  1226  001474  5041               	movf	(_gameState+7)^0,w,c
  1227  001476  A4D8               	btfss	status,2,c
  1228  001478  EF40  F00A         	goto	i2u61_41
  1229  00147C  EF42  F00A         	goto	i2u61_40
  1230  001480                     i2u61_41:
  1231  001480  EF44  F00A         	goto	i2l1245
  1232  001484                     i2u61_40:
  1233  001484                     
  1234                           ;main.c: 375:             moveHippoUp();
  1235  001484  EC3B  F00C         	call	_moveHippoUp	;wreg free
  1236  001488                     i2l1245:
  1237                           
  1238                           ;main.c: 379:         INTCONbits.INT0IF = 0;
  1239  001488  92F2               	bcf	242,1,c	;volatile
  1240  00148A                     i2l1247:
  1241                           
  1242                           ;main.c: 383:     if (INTCONbits.TMR0IF) {
  1243  00148A  A4F2               	btfss	242,2,c	;volatile
  1244  00148C  EF4A  F00A         	goto	i2u62_41
  1245  001490  EF4C  F00A         	goto	i2u62_40
  1246  001494                     i2u62_41:
  1247  001494  EF55  F00A         	goto	i2l109
  1248  001498                     i2u62_40:
  1249  001498                     
  1250                           ;main.c: 385:         TMR0H = 0x3C;
  1251  001498  0E3C               	movlw	60
  1252  00149A  6ED7               	movwf	215,c	;volatile
  1253                           
  1254                           ;main.c: 386:         TMR0L = 0xAF;
  1255  00149C  0EAF               	movlw	175
  1256  00149E  6ED6               	movwf	214,c	;volatile
  1257  0014A0                     
  1258                           ;main.c: 389:         processTimerTick();
  1259  0014A0  EC3C  F009         	call	_processTimerTick	;wreg free
  1260  0014A4                     
  1261                           ;main.c: 392:         updateDisplay();
  1262  0014A4  ECA1  F008         	call	i2_updateDisplay	;wreg free
  1263  0014A8                     
  1264                           ;main.c: 395:         INTCONbits.TMR0IF = 0;
  1265  0014A8  94F2               	bcf	242,2,c	;volatile
  1266  0014AA                     i2l109:
  1267  0014AA  C017  FFF5         	movff	??_HandleInterrupt+5,tablat
  1268  0014AE  C016  FFF8         	movff	??_HandleInterrupt+4,tblptru
  1269  0014B2  C015  FFF7         	movff	??_HandleInterrupt+3,tblptrh
  1270  0014B6  C014  FFF6         	movff	??_HandleInterrupt+2,tblptrl
  1271  0014BA  C013  FFDA         	movff	??_HandleInterrupt+1,fsr2h
  1272  0014BE  C012  FFD9         	movff	??_HandleInterrupt,fsr2l
  1273  0014C2  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1274  0014C4  0011               	retfie		f
  1275  0014C6                     __end_of_HandleInterrupt:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function i2_updateDisplay *****************
  1279 ;; Defined at:
  1280 ;;		line 174 in file "main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  score           2   15[COMRAM] unsigned short 
  1285 ;;  digit           1   14[COMRAM] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;Total ram usage:        5 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    1
  1302 ;; This function calls:
  1303 ;;		i2___lwdiv
  1304 ;;		i2___lwmod
  1305 ;; This function is called by:
  1306 ;;		_HandleInterrupt
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text8
  1311  001142                     __ptext8:
  1312                           	callstack 0
  1313  001142                     i2_updateDisplay:
  1314                           	callstack 26
  1315  001142                     
  1316                           ;main.c: 176:     PORTH = 0x00;
  1317  001142  0E00               	movlw	0
  1318  001144  6E87               	movwf	135,c	;volatile
  1319  001146                     
  1320                           ;main.c: 179:     uint16_t score = gameState.totalScore;
  1321  001146  C03F  F010         	movff	_gameState+5,i2updateDisplay@score
  1322  00114A  C040  F011         	movff	_gameState+6,i2updateDisplay@score+1
  1323                           
  1324                           ;main.c: 180:     uint8_t digit = 0;
  1325  00114E  0E00               	movlw	0
  1326  001150  6E0F               	movwf	i2updateDisplay@digit^0,c
  1327                           
  1328                           ;main.c: 183:     switch (currentDisplayIndex) {
  1329  001152  EF01  F009         	goto	i2l1227
  1330  001156                     i2l1217:
  1331                           
  1332                           ;main.c: 185:             digit = score % 10;
  1333  001156  C010  F008         	movff	i2updateDisplay@score,i2___lwmod@dividend
  1334  00115A  C011  F009         	movff	i2updateDisplay@score+1,i2___lwmod@dividend+1
  1335  00115E  0E00               	movlw	0
  1336  001160  6E0B               	movwf	(i2___lwmod@divisor+1)^0,c
  1337  001162  0E0A               	movlw	10
  1338  001164  6E0A               	movwf	i2___lwmod@divisor^0,c
  1339  001166  EC40  F00B         	call	i2___lwmod	;wreg free
  1340  00116A  5008               	movf	?i2___lwmod^0,w,c
  1341  00116C  6E0F               	movwf	i2updateDisplay@digit^0,c
  1342                           
  1343                           ;main.c: 186:             break;
  1344  00116E  EF1E  F009         	goto	i2l1229
  1345  001172                     i2l1219:
  1346                           
  1347                           ;main.c: 188:             digit = (score / 10) % 10;
  1348  001172  0E00               	movlw	0
  1349  001174  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
  1350  001176  0E0A               	movlw	10
  1351  001178  6E03               	movwf	i2___lwdiv@divisor^0,c
  1352  00117A  C010  F001         	movff	i2updateDisplay@score,i2___lwdiv@dividend
  1353  00117E  C011  F002         	movff	i2updateDisplay@score+1,i2___lwdiv@dividend+1
  1354  001182  EC9D  F00A         	call	i2___lwdiv	;wreg free
  1355  001186  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  1356  00118A  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  1357  00118E  0E00               	movlw	0
  1358  001190  6E0B               	movwf	(i2___lwmod@divisor+1)^0,c
  1359  001192  0E0A               	movlw	10
  1360  001194  6E0A               	movwf	i2___lwmod@divisor^0,c
  1361  001196  EC40  F00B         	call	i2___lwmod	;wreg free
  1362  00119A  5008               	movf	?i2___lwmod^0,w,c
  1363  00119C  6E0F               	movwf	i2updateDisplay@digit^0,c
  1364                           
  1365                           ;main.c: 189:             break;
  1366  00119E  EF1E  F009         	goto	i2l1229
  1367  0011A2                     i2l1221:
  1368                           
  1369                           ;main.c: 191:             digit = (score / 100) % 10;
  1370  0011A2  0E00               	movlw	0
  1371  0011A4  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
  1372  0011A6  0E64               	movlw	100
  1373  0011A8  6E03               	movwf	i2___lwdiv@divisor^0,c
  1374  0011AA  C010  F001         	movff	i2updateDisplay@score,i2___lwdiv@dividend
  1375  0011AE  C011  F002         	movff	i2updateDisplay@score+1,i2___lwdiv@dividend+1
  1376  0011B2  EC9D  F00A         	call	i2___lwdiv	;wreg free
  1377  0011B6  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  1378  0011BA  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  1379  0011BE  0E00               	movlw	0
  1380  0011C0  6E0B               	movwf	(i2___lwmod@divisor+1)^0,c
  1381  0011C2  0E0A               	movlw	10
  1382  0011C4  6E0A               	movwf	i2___lwmod@divisor^0,c
  1383  0011C6  EC40  F00B         	call	i2___lwmod	;wreg free
  1384  0011CA  5008               	movf	?i2___lwmod^0,w,c
  1385  0011CC  6E0F               	movwf	i2updateDisplay@digit^0,c
  1386                           
  1387                           ;main.c: 192:             break;
  1388  0011CE  EF1E  F009         	goto	i2l1229
  1389  0011D2                     i2l1223:
  1390                           
  1391                           ;main.c: 194:             digit = (score / 1000) % 10;
  1392  0011D2  0E03               	movlw	3
  1393  0011D4  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
  1394  0011D6  0EE8               	movlw	232
  1395  0011D8  6E03               	movwf	i2___lwdiv@divisor^0,c
  1396  0011DA  C010  F001         	movff	i2updateDisplay@score,i2___lwdiv@dividend
  1397  0011DE  C011  F002         	movff	i2updateDisplay@score+1,i2___lwdiv@dividend+1
  1398  0011E2  EC9D  F00A         	call	i2___lwdiv	;wreg free
  1399  0011E6  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  1400  0011EA  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  1401  0011EE  0E00               	movlw	0
  1402  0011F0  6E0B               	movwf	(i2___lwmod@divisor+1)^0,c
  1403  0011F2  0E0A               	movlw	10
  1404  0011F4  6E0A               	movwf	i2___lwmod@divisor^0,c
  1405  0011F6  EC40  F00B         	call	i2___lwmod	;wreg free
  1406  0011FA  5008               	movf	?i2___lwmod^0,w,c
  1407  0011FC  6E0F               	movwf	i2updateDisplay@digit^0,c
  1408                           
  1409                           ;main.c: 195:             break;
  1410  0011FE  EF1E  F009         	goto	i2l1229
  1411  001202                     i2l1227:
  1412  001202  5046               	movf	_currentDisplayIndex^0,w,c
  1413  001204  6E0D               	movwf	??i2_updateDisplay^0,c
  1414  001206  6A0E               	clrf	(??i2_updateDisplay+1)^0,c
  1415                           
  1416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1417                           ; Switch size 1, requested type "simple"
  1418                           ; Number of cases is 1, Range of values is 0 to 0
  1419                           ; switch strategies available:
  1420                           ; Name         Instructions Cycles
  1421                           ; simple_byte            4     3 (average)
  1422                           ;	Chosen strategy is simple_byte
  1423  001208  500E               	movf	(??i2_updateDisplay+1)^0,w,c
  1424  00120A  0A00               	xorlw	0	; case 0
  1425  00120C  B4D8               	btfsc	status,2,c
  1426  00120E  EF0B  F009         	goto	i2l1287
  1427  001212  EF1E  F009         	goto	i2l1229
  1428  001216                     i2l1287:
  1429                           
  1430                           ; Switch size 1, requested type "simple"
  1431                           ; Number of cases is 4, Range of values is 0 to 3
  1432                           ; switch strategies available:
  1433                           ; Name         Instructions Cycles
  1434                           ; simple_byte           13     7 (average)
  1435                           ;	Chosen strategy is simple_byte
  1436  001216  500D               	movf	??i2_updateDisplay^0,w,c
  1437  001218  0A00               	xorlw	0	; case 0
  1438  00121A  B4D8               	btfsc	status,2,c
  1439  00121C  EFAB  F008         	goto	i2l1217
  1440  001220  0A01               	xorlw	1	; case 1
  1441  001222  B4D8               	btfsc	status,2,c
  1442  001224  EFB9  F008         	goto	i2l1219
  1443  001228  0A03               	xorlw	3	; case 2
  1444  00122A  B4D8               	btfsc	status,2,c
  1445  00122C  EFD1  F008         	goto	i2l1221
  1446  001230  0A01               	xorlw	1	; case 3
  1447  001232  B4D8               	btfsc	status,2,c
  1448  001234  EFE9  F008         	goto	i2l1223
  1449  001238  EF1E  F009         	goto	i2l1229
  1450  00123C                     i2l1229:
  1451                           
  1452                           ;main.c: 199:     PORTJ = SEVEN_SEG_DIGITS[digit];
  1453  00123C  0E01               	movlw	low _SEVEN_SEG_DIGITS
  1454  00123E  240F               	addwf	i2updateDisplay@digit^0,w,c
  1455  001240  6EF6               	movwf	tblptrl,c
  1456  001242  6AF7               	clrf	tblptrh,c
  1457  001244  0E10               	movlw	high _SEVEN_SEG_DIGITS
  1458  001246  22F7               	addwfc	tblptrh,f,c
  1459  001248                     	if	1	;There are 3 active tblptr bytes
  1460  001248  6AF8               	clrf	tblptru,c
  1461  00124A  0E00               	movlw	low (__mediumconst shr (0+16))
  1462  00124C  22F8               	addwfc	tblptru,f,c
  1463  00124E                     	endif
  1464  00124E  0008               	tblrd		*
  1465  001250  CFF5 FF88          	movff	tablat,3976	;volatile
  1466  001254                     
  1467                           ;main.c: 202:     PORTH = (1 << currentDisplayIndex);
  1468  001254  C046  F00D         	movff	_currentDisplayIndex,??i2_updateDisplay
  1469  001258  0E01               	movlw	1
  1470  00125A  6E0E               	movwf	(??i2_updateDisplay+1)^0,c
  1471  00125C  2A0D               	incf	??i2_updateDisplay^0,f,c
  1472  00125E  EF33  F009         	goto	i2u59_44
  1473  001262                     i2u59_45:
  1474  001262  90D8               	bcf	status,0,c
  1475  001264  360E               	rlcf	(??i2_updateDisplay+1)^0,f,c
  1476  001266                     i2u59_44:
  1477  001266  2E0D               	decfsz	??i2_updateDisplay^0,f,c
  1478  001268  EF31  F009         	goto	i2u59_45
  1479  00126C  500E               	movf	(??i2_updateDisplay+1)^0,w,c
  1480  00126E  6E87               	movwf	135,c	;volatile
  1481  001270                     
  1482                           ;main.c: 205:     currentDisplayIndex = (currentDisplayIndex + 1) % 4;
  1483  001270  2846               	incf	_currentDisplayIndex^0,w,c
  1484  001272  0B03               	andlw	3
  1485  001274  6E46               	movwf	_currentDisplayIndex^0,c
  1486  001276  0012               	return		;funcret
  1487  001278                     __end_ofi2_updateDisplay:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function i2___lwmod *****************
  1491 ;; Defined at:
  1492 ;;		line 7 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/lwmod.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  dividend        2    7[COMRAM] unsigned int 
  1495 ;;  divisor         2    9[COMRAM] unsigned int 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  counter         1   11[COMRAM] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  2    7[COMRAM] unsigned int 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;Total ram usage:        5 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		i2_updateDisplay
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text9
  1521  001680                     __ptext9:
  1522                           	callstack 0
  1523  001680                     i2___lwmod:
  1524                           	callstack 26
  1525  001680  500A               	movf	i2___lwmod@divisor^0,w,c
  1526  001682  100B               	iorwf	(i2___lwmod@divisor+1)^0,w,c
  1527  001684  B4D8               	btfsc	status,2,c
  1528  001686  EF47  F00B         	goto	i2u49_41
  1529  00168A  EF49  F00B         	goto	i2u49_40
  1530  00168E                     i2u49_41:
  1531  00168E  EF6D  F00B         	goto	i2l623
  1532  001692                     i2u49_40:
  1533  001692  0E01               	movlw	1
  1534  001694  6E0C               	movwf	i2___lwmod@counter^0,c
  1535  001696  EF51  F00B         	goto	i2l1151
  1536  00169A                     i2l1149:
  1537  00169A  90D8               	bcf	status,0,c
  1538  00169C  360A               	rlcf	i2___lwmod@divisor^0,f,c
  1539  00169E  360B               	rlcf	(i2___lwmod@divisor+1)^0,f,c
  1540  0016A0  2A0C               	incf	i2___lwmod@counter^0,f,c
  1541  0016A2                     i2l1151:
  1542  0016A2  AE0B               	btfss	(i2___lwmod@divisor+1)^0,7,c
  1543  0016A4  EF56  F00B         	goto	i2u50_41
  1544  0016A8  EF58  F00B         	goto	i2u50_40
  1545  0016AC                     i2u50_41:
  1546  0016AC  EF4D  F00B         	goto	i2l1149
  1547  0016B0                     i2u50_40:
  1548  0016B0                     i2l1153:
  1549  0016B0  500A               	movf	i2___lwmod@divisor^0,w,c
  1550  0016B2  5C08               	subwf	i2___lwmod@dividend^0,w,c
  1551  0016B4  500B               	movf	(i2___lwmod@divisor+1)^0,w,c
  1552  0016B6  5809               	subwfb	(i2___lwmod@dividend+1)^0,w,c
  1553  0016B8  A0D8               	btfss	status,0,c
  1554  0016BA  EF61  F00B         	goto	i2u51_41
  1555  0016BE  EF63  F00B         	goto	i2u51_40
  1556  0016C2                     i2u51_41:
  1557  0016C2  EF67  F00B         	goto	i2l1157
  1558  0016C6                     i2u51_40:
  1559  0016C6  500A               	movf	i2___lwmod@divisor^0,w,c
  1560  0016C8  5E08               	subwf	i2___lwmod@dividend^0,f,c
  1561  0016CA  500B               	movf	(i2___lwmod@divisor+1)^0,w,c
  1562  0016CC  5A09               	subwfb	(i2___lwmod@dividend+1)^0,f,c
  1563  0016CE                     i2l1157:
  1564  0016CE  90D8               	bcf	status,0,c
  1565  0016D0  320B               	rrcf	(i2___lwmod@divisor+1)^0,f,c
  1566  0016D2  320A               	rrcf	i2___lwmod@divisor^0,f,c
  1567  0016D4  2E0C               	decfsz	i2___lwmod@counter^0,f,c
  1568  0016D6  EF58  F00B         	goto	i2l1153
  1569  0016DA                     i2l623:
  1570  0016DA  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  1571  0016DE  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  1572  0016E2  0012               	return		;funcret
  1573  0016E4                     __end_ofi2___lwmod:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function i2___lwdiv *****************
  1577 ;; Defined at:
  1578 ;;		line 7 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/lwdiv.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  dividend        2    0[COMRAM] unsigned int 
  1581 ;;  divisor         2    2[COMRAM] unsigned int 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  quotient        2    4[COMRAM] unsigned int 
  1584 ;;  counter         1    6[COMRAM] unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  2    0[COMRAM] unsigned int 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1594 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;Total ram usage:        7 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		i2_updateDisplay
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text10
  1608  00153A                     __ptext10:
  1609                           	callstack 0
  1610  00153A                     i2___lwdiv:
  1611                           	callstack 26
  1612  00153A  0E00               	movlw	0
  1613  00153C  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
  1614  00153E  0E00               	movlw	0
  1615  001540  6E05               	movwf	i2___lwdiv@quotient^0,c
  1616  001542  5003               	movf	i2___lwdiv@divisor^0,w,c
  1617  001544  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
  1618  001546  B4D8               	btfsc	status,2,c
  1619  001548  EFA8  F00A         	goto	i2u46_41
  1620  00154C  EFAA  F00A         	goto	i2u46_40
  1621  001550                     i2u46_41:
  1622  001550  EFD2  F00A         	goto	i2l613
  1623  001554                     i2u46_40:
  1624  001554  0E01               	movlw	1
  1625  001556  6E07               	movwf	i2___lwdiv@counter^0,c
  1626  001558  EFB2  F00A         	goto	i2l1131
  1627  00155C                     i2l1129:
  1628  00155C  90D8               	bcf	status,0,c
  1629  00155E  3603               	rlcf	i2___lwdiv@divisor^0,f,c
  1630  001560  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
  1631  001562  2A07               	incf	i2___lwdiv@counter^0,f,c
  1632  001564                     i2l1131:
  1633  001564  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
  1634  001566  EFB7  F00A         	goto	i2u47_41
  1635  00156A  EFB9  F00A         	goto	i2u47_40
  1636  00156E                     i2u47_41:
  1637  00156E  EFAE  F00A         	goto	i2l1129
  1638  001572                     i2u47_40:
  1639  001572                     i2l1133:
  1640  001572  90D8               	bcf	status,0,c
  1641  001574  3605               	rlcf	i2___lwdiv@quotient^0,f,c
  1642  001576  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
  1643  001578  5003               	movf	i2___lwdiv@divisor^0,w,c
  1644  00157A  5C01               	subwf	i2___lwdiv@dividend^0,w,c
  1645  00157C  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
  1646  00157E  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
  1647  001580  A0D8               	btfss	status,0,c
  1648  001582  EFC5  F00A         	goto	i2u48_41
  1649  001586  EFC7  F00A         	goto	i2u48_40
  1650  00158A                     i2u48_41:
  1651  00158A  EFCC  F00A         	goto	i2l1141
  1652  00158E                     i2u48_40:
  1653  00158E  5003               	movf	i2___lwdiv@divisor^0,w,c
  1654  001590  5E01               	subwf	i2___lwdiv@dividend^0,f,c
  1655  001592  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
  1656  001594  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
  1657  001596  8005               	bsf	i2___lwdiv@quotient^0,0,c
  1658  001598                     i2l1141:
  1659  001598  90D8               	bcf	status,0,c
  1660  00159A  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
  1661  00159C  3203               	rrcf	i2___lwdiv@divisor^0,f,c
  1662  00159E  2E07               	decfsz	i2___lwdiv@counter^0,f,c
  1663  0015A0  EFB9  F00A         	goto	i2l1133
  1664  0015A4                     i2l613:
  1665  0015A4  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  1666  0015A8  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  1667  0015AC  0012               	return		;funcret
  1668  0015AE                     __end_ofi2___lwdiv:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _processTimerTick *****************
  1672 ;; Defined at:
  1673 ;;		line 318 in file "main.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;Total ram usage:        0 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    2
  1694 ;; This function calls:
  1695 ;;		_checkPrizeCaught
  1696 ;;		_completeSoftReset
  1697 ;;		_moveHippoDown
  1698 ;;		_softReset
  1699 ;; This function is called by:
  1700 ;;		_HandleInterrupt
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text11
  1705  001278                     __ptext11:
  1706                           	callstack 0
  1707  001278                     _processTimerTick:
  1708                           	callstack 25
  1709  001278                     
  1710                           ;main.c: 320:     timers.totalTime += 5;
  1711  001278  0E05               	movlw	5
  1712  00127A  2636               	addwf	(_timers+10)^0,f,c
  1713  00127C  0E00               	movlw	0
  1714  00127E  2237               	addwfc	(_timers+11)^0,f,c
  1715  001280  2238               	addwfc	(_timers+12)^0,f,c
  1716  001282  2239               	addwfc	(_timers+13)^0,f,c
  1717  001284                     
  1718                           ;main.c: 323:     if (gameState.gameState == 0) {
  1719  001284  5041               	movf	(_gameState+7)^0,w,c
  1720  001286  A4D8               	btfss	status,2,c
  1721  001288  EF48  F009         	goto	i2u25_41
  1722  00128C  EF4A  F009         	goto	i2u25_40
  1723  001290                     i2u25_41:
  1724  001290  EFB3  F009         	goto	i2l1007
  1725  001294                     i2u25_40:
  1726  001294                     
  1727                           ;main.c: 325:         timers.blinkCounter += 5;
  1728  001294  0E05               	movlw	5
  1729  001296  262E               	addwf	(_timers+2)^0,f,c
  1730  001298  0E00               	movlw	0
  1731  00129A  222F               	addwfc	(_timers+3)^0,f,c
  1732                           
  1733                           ;main.c: 326:         if (timers.blinkCounter >= 100) {
  1734  00129C  502F               	movf	(_timers+3)^0,w,c
  1735  00129E  E109               	bnz	i2u26_40
  1736  0012A0  0E64               	movlw	100
  1737  0012A2  5C2E               	subwf	(_timers+2)^0,w,c
  1738  0012A4  A0D8               	btfss	status,0,c
  1739  0012A6  EF57  F009         	goto	i2u26_41
  1740  0012AA  EF59  F009         	goto	i2u26_40
  1741  0012AE                     i2u26_41:
  1742  0012AE  EF68  F009         	goto	i2l985
  1743  0012B2                     i2u26_40:
  1744  0012B2                     
  1745                           ;main.c: 327:             gameState.prizeVisible = !gameState.prizeVisible;
  1746  0012B2  503C               	movf	(_gameState+2)^0,w,c
  1747  0012B4  B4D8               	btfsc	status,2,c
  1748  0012B6  EF5F  F009         	goto	i2u27_41
  1749  0012BA  EF62  F009         	goto	i2u27_40
  1750  0012BE                     i2u27_41:
  1751  0012BE  0E01               	movlw	1
  1752  0012C0  EF63  F009         	goto	i2u28_40
  1753  0012C4                     i2u27_40:
  1754  0012C4  0E00               	movlw	0
  1755  0012C6                     i2u28_40:
  1756  0012C6  6E3C               	movwf	(_gameState+2)^0,c
  1757                           
  1758                           ;main.c: 328:             timers.blinkCounter = 0;
  1759  0012C8  0E00               	movlw	0
  1760  0012CA  6E2F               	movwf	(_timers+3)^0,c
  1761  0012CC  0E00               	movlw	0
  1762  0012CE  6E2E               	movwf	(_timers+2)^0,c
  1763  0012D0                     i2l985:
  1764                           
  1765                           ;main.c: 332:         timers.gravityCounter += 5;
  1766  0012D0  0E05               	movlw	5
  1767  0012D2  262C               	addwf	_timers^0,f,c
  1768  0012D4  0E00               	movlw	0
  1769  0012D6  222D               	addwfc	(_timers+1)^0,f,c
  1770  0012D8                     
  1771                           ;main.c: 333:         if (timers.gravityCounter >= 70) {
  1772  0012D8  502D               	movf	(_timers+1)^0,w,c
  1773  0012DA  E109               	bnz	i2u29_40
  1774  0012DC  0E46               	movlw	70
  1775  0012DE  5C2C               	subwf	_timers^0,w,c
  1776  0012E0  A0D8               	btfss	status,0,c
  1777  0012E2  EF75  F009         	goto	i2u29_41
  1778  0012E6  EF77  F009         	goto	i2u29_40
  1779  0012EA                     i2u29_41:
  1780  0012EA  EF7D  F009         	goto	i2l993
  1781  0012EE                     i2u29_40:
  1782  0012EE                     
  1783                           ;main.c: 334:             moveHippoDown();
  1784  0012EE  ECE2  F00B         	call	_moveHippoDown	;wreg free
  1785  0012F2                     
  1786                           ;main.c: 335:             timers.gravityCounter = 0;
  1787  0012F2  0E00               	movlw	0
  1788  0012F4  6E2D               	movwf	(_timers+1)^0,c
  1789  0012F6  0E00               	movlw	0
  1790  0012F8  6E2C               	movwf	_timers^0,c
  1791  0012FA                     i2l993:
  1792                           
  1793                           ;main.c: 339:         timers.scoreCounter += 5;
  1794  0012FA  0E05               	movlw	5
  1795  0012FC  2630               	addwf	(_timers+4)^0,f,c
  1796  0012FE  0E00               	movlw	0
  1797  001300  2231               	addwfc	(_timers+5)^0,f,c
  1798  001302                     
  1799                           ;main.c: 340:         if (timers.scoreCounter >= 200) {
  1800  001302  5031               	movf	(_timers+5)^0,w,c
  1801  001304  E109               	bnz	i2u30_40
  1802  001306  0EC8               	movlw	200
  1803  001308  5C30               	subwf	(_timers+4)^0,w,c
  1804  00130A  A0D8               	btfss	status,0,c
  1805  00130C  EF8A  F009         	goto	i2u30_41
  1806  001310  EF8C  F009         	goto	i2u30_40
  1807  001314                     i2u30_41:
  1808  001314  EFA5  F009         	goto	i2l1003
  1809  001318                     i2u30_40:
  1810  001318                     
  1811                           ;main.c: 341:             if (gameState.currentScore >= 10) {
  1812  001318  503E               	movf	(_gameState+4)^0,w,c
  1813  00131A  E109               	bnz	i2u31_40
  1814  00131C  0E0A               	movlw	10
  1815  00131E  5C3D               	subwf	(_gameState+3)^0,w,c
  1816  001320  A0D8               	btfss	status,0,c
  1817  001322  EF95  F009         	goto	i2u31_41
  1818  001326  EF97  F009         	goto	i2u31_40
  1819  00132A                     i2u31_41:
  1820  00132A  EF9D  F009         	goto	i2l1001
  1821  00132E                     i2u31_40:
  1822  00132E                     
  1823                           ;main.c: 342:                 gameState.currentScore -= 10;
  1824  00132E  0E0A               	movlw	10
  1825  001330  5E3D               	subwf	(_gameState+3)^0,f,c
  1826  001332  0E00               	movlw	0
  1827  001334  5A3E               	subwfb	(_gameState+4)^0,f,c
  1828                           
  1829                           ;main.c: 343:             } else {
  1830  001336  EFA1  F009         	goto	i2l96
  1831  00133A                     i2l1001:
  1832                           
  1833                           ;main.c: 344:                 gameState.currentScore = 0;
  1834  00133A  0E00               	movlw	0
  1835  00133C  6E3E               	movwf	(_gameState+4)^0,c
  1836  00133E  0E00               	movlw	0
  1837  001340  6E3D               	movwf	(_gameState+3)^0,c
  1838  001342                     i2l96:
  1839                           
  1840                           ;main.c: 346:             timers.scoreCounter = 0;
  1841  001342  0E00               	movlw	0
  1842  001344  6E31               	movwf	(_timers+5)^0,c
  1843  001346  0E00               	movlw	0
  1844  001348  6E30               	movwf	(_timers+4)^0,c
  1845  00134A                     i2l1003:
  1846                           
  1847                           ;main.c: 350:         if (checkPrizeCaught()) {
  1848  00134A  EC30  F00C         	call	_checkPrizeCaught	;wreg free
  1849  00134E  0900               	iorlw	0
  1850  001350  B4D8               	btfsc	status,2,c
  1851  001352  EFAD  F009         	goto	i2u32_41
  1852  001356  EFAF  F009         	goto	i2u32_40
  1853  00135A                     i2u32_41:
  1854  00135A  EFD0  F009         	goto	i2l101
  1855  00135E                     i2u32_40:
  1856  00135E                     
  1857                           ;main.c: 351:             softReset();
  1858  00135E  EC14  F00C         	call	_softReset	;wreg free
  1859  001362  EFD0  F009         	goto	i2l101
  1860  001366                     i2l1007:
  1861  001366  0441               	decf	(_gameState+7)^0,w,c
  1862  001368  A4D8               	btfss	status,2,c
  1863  00136A  EFB9  F009         	goto	i2u33_41
  1864  00136E  EFBB  F009         	goto	i2u33_40
  1865  001372                     i2u33_41:
  1866  001372  EFD0  F009         	goto	i2l101
  1867  001376                     i2u33_40:
  1868  001376                     
  1869                           ;main.c: 356:         timers.resetCounter += 5;
  1870  001376  0E05               	movlw	5
  1871  001378  2632               	addwf	(_timers+6)^0,f,c
  1872  00137A  0E00               	movlw	0
  1873  00137C  2233               	addwfc	(_timers+7)^0,f,c
  1874                           
  1875                           ;main.c: 357:         timers.totalResetTime += 5;
  1876  00137E  0E05               	movlw	5
  1877  001380  2634               	addwf	(_timers+8)^0,f,c
  1878  001382  0E00               	movlw	0
  1879  001384  2235               	addwfc	(_timers+9)^0,f,c
  1880                           
  1881                           ;main.c: 360:         if (timers.totalResetTime >= 400) {
  1882  001386  0E90               	movlw	144
  1883  001388  5C34               	subwf	(_timers+8)^0,w,c
  1884  00138A  0E01               	movlw	1
  1885  00138C  5835               	subwfb	(_timers+9)^0,w,c
  1886  00138E  A0D8               	btfss	status,0,c
  1887  001390  EFCC  F009         	goto	i2u34_41
  1888  001394  EFCE  F009         	goto	i2u34_40
  1889  001398                     i2u34_41:
  1890  001398  EFD0  F009         	goto	i2l101
  1891  00139C                     i2u34_40:
  1892  00139C                     
  1893                           ;main.c: 361:             completeSoftReset();
  1894  00139C  ECC2  F00B         	call	_completeSoftReset	;wreg free
  1895  0013A0                     i2l101:
  1896  0013A0  0012               	return		;funcret
  1897  0013A2                     __end_of_processTimerTick:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _softReset *****************
  1901 ;; Defined at:
  1902 ;;		line 261 in file "main.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;Total ram usage:        0 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_processTimerTick
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text12
  1930  001828                     __ptext12:
  1931                           	callstack 0
  1932  001828                     _softReset:
  1933                           	callstack 26
  1934  001828                     
  1935                           ;main.c: 263:     gameState.totalScore += gameState.currentScore;
  1936  001828  EE20  F03D         	lfsr	2,_gameState+3
  1937  00182C  50DE               	movf	postinc2,w,c
  1938  00182E  263F               	addwf	(_gameState+5)^0,f,c
  1939  001830  50DD               	movf	postdec2,w,c
  1940  001832  2240               	addwfc	(_gameState+6)^0,f,c
  1941  001834                     
  1942                           ;main.c: 266:     gameState.gameState = 1;
  1943  001834  0E01               	movlw	1
  1944  001836  6E41               	movwf	(_gameState+7)^0,c
  1945  001838                     
  1946                           ;main.c: 269:     timers.resetCounter = 0;
  1947  001838  0E00               	movlw	0
  1948  00183A  6E33               	movwf	(_timers+7)^0,c
  1949  00183C  0E00               	movlw	0
  1950  00183E  6E32               	movwf	(_timers+6)^0,c
  1951  001840                     
  1952                           ;main.c: 270:     timers.totalResetTime = 0;
  1953  001840  0E00               	movlw	0
  1954  001842  6E35               	movwf	(_timers+9)^0,c
  1955  001844  0E00               	movlw	0
  1956  001846  6E34               	movwf	(_timers+8)^0,c
  1957  001848  0012               	return		;funcret
  1958  00184A                     __end_of_softReset:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _moveHippoDown *****************
  1962 ;; Defined at:
  1963 ;;		line 248 in file "main.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;Total ram usage:        4 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_processTimerTick
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text13
  1991  0017C4                     __ptext13:
  1992                           	callstack 0
  1993  0017C4                     _moveHippoDown:
  1994                           	callstack 26
  1995  0017C4                     
  1996                           ;main.c: 249:     if (gameState.hippoPosition + gameState.hippoSize - 1 < 7) {
  1997  0017C4  0EFF               	movlw	255
  1998  0017C6  6E01               	movwf	??_moveHippoDown^0,c
  1999  0017C8  0EFF               	movlw	255
  2000  0017CA  6E02               	movwf	(??_moveHippoDown+1)^0,c
  2001  0017CC  503A               	movf	_gameState^0,w,c
  2002  0017CE  C03B  F003         	movff	_gameState+1,??_moveHippoDown+2
  2003  0017D2  6A04               	clrf	(??_moveHippoDown+3)^0,c
  2004  0017D4  2603               	addwf	(??_moveHippoDown+2)^0,f,c
  2005  0017D6  0E00               	movlw	0
  2006  0017D8  2204               	addwfc	(??_moveHippoDown+3)^0,f,c
  2007  0017DA  5001               	movf	??_moveHippoDown^0,w,c
  2008  0017DC  2603               	addwf	(??_moveHippoDown+2)^0,f,c
  2009  0017DE  5002               	movf	(??_moveHippoDown+1)^0,w,c
  2010  0017E0  2204               	addwfc	(??_moveHippoDown+3)^0,f,c
  2011  0017E2  BE04               	btfsc	(??_moveHippoDown+3)^0,7,c
  2012  0017E4  EFFF  F00B         	goto	i2u1_40
  2013  0017E8  5004               	movf	(??_moveHippoDown+3)^0,w,c
  2014  0017EA  E107               	bnz	i2u1_41
  2015  0017EC  0E07               	movlw	7
  2016  0017EE  5C03               	subwf	(??_moveHippoDown+2)^0,w,c
  2017  0017F0  B0D8               	btfsc	status,0,c
  2018  0017F2  EFFD  F00B         	goto	i2u1_41
  2019  0017F6  EFFF  F00B         	goto	i2u1_40
  2020  0017FA                     i2u1_41:
  2021  0017FA  EF00  F00C         	goto	i2l74
  2022  0017FE                     i2u1_40:
  2023  0017FE                     
  2024                           ;main.c: 250:         gameState.hippoPosition++;
  2025  0017FE  2A3B               	incf	(_gameState+1)^0,f,c
  2026  001800                     i2l74:
  2027  001800  0012               	return		;funcret
  2028  001802                     __end_of_moveHippoDown:
  2029                           	callstack 0
  2030                           
  2031 ;; *************** function _completeSoftReset *****************
  2032 ;; Defined at:
  2033 ;;		line 292 in file "main.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;Total ram usage:        0 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:    1
  2054 ;; This function calls:
  2055 ;;		_hardReset
  2056 ;; This function is called by:
  2057 ;;		_processTimerTick
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text14
  2062  001784                     __ptext14:
  2063                           	callstack 0
  2064  001784                     _completeSoftReset:
  2065                           	callstack 25
  2066  001784                     
  2067                           ;main.c: 294:     gameState.hippoSize++;
  2068  001784  2A3A               	incf	_gameState^0,f,c
  2069  001786                     
  2070                           ;main.c: 297:     if (gameState.hippoSize > 5) {
  2071  001786  0E05               	movlw	5
  2072  001788  643A               	cpfsgt	_gameState^0,c
  2073  00178A  EFC9  F00B         	goto	i2u4_41
  2074  00178E  EFCB  F00B         	goto	i2u4_40
  2075  001792                     i2u4_41:
  2076  001792  EFCF  F00B         	goto	i2l821
  2077  001796                     i2u4_40:
  2078  001796                     
  2079                           ;main.c: 298:         hardReset();
  2080  001796  EC01  F00C         	call	_hardReset	;wreg free
  2081                           
  2082                           ;main.c: 299:     } else {
  2083  00179A  EFE1  F00B         	goto	i2l88
  2084  00179E                     i2l821:
  2085                           
  2086                           ;main.c: 301:         gameState.hippoPosition = 7;
  2087  00179E  0E07               	movlw	7
  2088  0017A0  6E3B               	movwf	(_gameState+1)^0,c
  2089                           
  2090                           ;main.c: 304:         gameState.currentScore = 100;
  2091  0017A2  0E00               	movlw	0
  2092  0017A4  6E3E               	movwf	(_gameState+4)^0,c
  2093  0017A6  0E64               	movlw	100
  2094  0017A8  6E3D               	movwf	(_gameState+3)^0,c
  2095                           
  2096                           ;main.c: 307:         gameState.gameState = 0;
  2097  0017AA  0E00               	movlw	0
  2098  0017AC  6E41               	movwf	(_gameState+7)^0,c
  2099                           
  2100                           ;main.c: 310:         gameState.prizeVisible = 1;
  2101  0017AE  0E01               	movlw	1
  2102  0017B0  6E3C               	movwf	(_gameState+2)^0,c
  2103  0017B2                     
  2104                           ;main.c: 313:         gameState.roundStartTime = timers.totalTime;
  2105  0017B2  C036  F042         	movff	_timers+10,_gameState+8
  2106  0017B6  C037  F043         	movff	_timers+11,_gameState+9
  2107  0017BA  C038  F044         	movff	_timers+12,_gameState+10
  2108  0017BE  C039  F045         	movff	_timers+13,_gameState+11
  2109  0017C2                     i2l88:
  2110  0017C2  0012               	return		;funcret
  2111  0017C4                     __end_of_completeSoftReset:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _hardReset *****************
  2115 ;; Defined at:
  2116 ;;		line 274 in file "main.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_completeSoftReset
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text15
  2144  001802                     __ptext15:
  2145                           	callstack 0
  2146  001802                     _hardReset:
  2147                           	callstack 25
  2148  001802                     
  2149                           ;main.c: 276:     gameState.hippoSize = 1;
  2150  001802  0E01               	movlw	1
  2151  001804  6E3A               	movwf	_gameState^0,c
  2152                           
  2153                           ;main.c: 279:     gameState.hippoPosition = 7;
  2154  001806  0E07               	movlw	7
  2155  001808  6E3B               	movwf	(_gameState+1)^0,c
  2156                           
  2157                           ;main.c: 282:     gameState.currentScore = 100;
  2158  00180A  0E00               	movlw	0
  2159  00180C  6E3E               	movwf	(_gameState+4)^0,c
  2160  00180E  0E64               	movlw	100
  2161  001810  6E3D               	movwf	(_gameState+3)^0,c
  2162                           
  2163                           ;main.c: 285:     gameState.gameState = 0;
  2164  001812  0E00               	movlw	0
  2165  001814  6E41               	movwf	(_gameState+7)^0,c
  2166  001816                     
  2167                           ;main.c: 288:     gameState.roundStartTime = timers.totalTime;
  2168  001816  C036  F042         	movff	_timers+10,_gameState+8
  2169  00181A  C037  F043         	movff	_timers+11,_gameState+9
  2170  00181E  C038  F044         	movff	_timers+12,_gameState+10
  2171  001822  C039  F045         	movff	_timers+13,_gameState+11
  2172  001826  0012               	return		;funcret
  2173  001828                     __end_of_hardReset:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function _checkPrizeCaught *****************
  2177 ;; Defined at:
  2178 ;;		line 255 in file "main.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      unsigned char 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_processTimerTick
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text16
  2206  001860                     __ptext16:
  2207                           	callstack 0
  2208  001860                     _checkPrizeCaught:
  2209                           	callstack 26
  2210  001860                     
  2211                           ;main.c: 257:     return (gameState.hippoPosition == 0);
  2212  001860  503B               	movf	(_gameState+1)^0,w,c
  2213  001862  B4D8               	btfsc	status,2,c
  2214  001864  EF36  F00C         	goto	i2u2_41
  2215  001868  EF39  F00C         	goto	i2u2_40
  2216  00186C                     i2u2_41:
  2217  00186C  0E01               	movlw	1
  2218  00186E  EF3A  F00C         	goto	i2u3_40
  2219  001872                     i2u2_40:
  2220  001872  0E00               	movlw	0
  2221  001874                     i2u3_40:
  2222  001874  0012               	return		;funcret
  2223  001876                     __end_of_checkPrizeCaught:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function _moveHippoUp *****************
  2227 ;; Defined at:
  2228 ;;		line 241 in file "main.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2, status,0
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;Total ram usage:        0 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_HandleInterrupt
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text17
  2256  001876                     __ptext17:
  2257                           	callstack 0
  2258  001876                     _moveHippoUp:
  2259                           	callstack 27
  2260  001876                     
  2261                           ;main.c: 242:     if (gameState.hippoPosition > 0) {
  2262  001876  503B               	movf	(_gameState+1)^0,w,c
  2263  001878  B4D8               	btfsc	status,2,c
  2264  00187A  EF41  F00C         	goto	i2u24_41
  2265  00187E  EF43  F00C         	goto	i2u24_40
  2266  001882                     i2u24_41:
  2267  001882  EF44  F00C         	goto	i2l70
  2268  001886                     i2u24_40:
  2269  001886                     
  2270                           ;main.c: 243:         gameState.hippoPosition--;
  2271  001886  063B               	decf	(_gameState+1)^0,f,c
  2272  001888                     i2l70:
  2273  001888  0012               	return		;funcret
  2274  00188A                     __end_of_moveHippoUp:
  2275                           	callstack 0
  2276                           
  2277                           	psect	rparam
  2278  0000                     
  2279                           	psect	temp
  2280  000047                     btemp:
  2281                           	callstack 0
  2282  000047                     	ds	1
  2283  0000                     int$flags	set	btemp
  2284  0000                     wtemp8	set	btemp+1
  2285  0000                     ttemp5	set	btemp+1
  2286  0000                     ttemp6	set	btemp+4
  2287  0000                     ttemp7	set	btemp+8
  2288                           
  2289                           	psect	idloc
  2290                           
  2291                           ;Config register IDLOC0 @ 0x200000
  2292                           ;	unspecified, using default values
  2293  200000                     	org	2097152
  2294  200000  FF                 	db	255
  2295                           
  2296                           ;Config register IDLOC1 @ 0x200001
  2297                           ;	unspecified, using default values
  2298  200001                     	org	2097153
  2299  200001  FF                 	db	255
  2300                           
  2301                           ;Config register IDLOC2 @ 0x200002
  2302                           ;	unspecified, using default values
  2303  200002                     	org	2097154
  2304  200002  FF                 	db	255
  2305                           
  2306                           ;Config register IDLOC3 @ 0x200003
  2307                           ;	unspecified, using default values
  2308  200003                     	org	2097155
  2309  200003  FF                 	db	255
  2310                           
  2311                           ;Config register IDLOC4 @ 0x200004
  2312                           ;	unspecified, using default values
  2313  200004                     	org	2097156
  2314  200004  FF                 	db	255
  2315                           
  2316                           ;Config register IDLOC5 @ 0x200005
  2317                           ;	unspecified, using default values
  2318  200005                     	org	2097157
  2319  200005  FF                 	db	255
  2320                           
  2321                           ;Config register IDLOC6 @ 0x200006
  2322                           ;	unspecified, using default values
  2323  200006                     	org	2097158
  2324  200006  FF                 	db	255
  2325                           
  2326                           ;Config register IDLOC7 @ 0x200007
  2327                           ;	unspecified, using default values
  2328  200007                     	org	2097159
  2329  200007  FF                 	db	255
  2330                           
  2331                           	psect	config
  2332                           
  2333                           ; Padding undefined space
  2334  300000                     	org	3145728
  2335  300000  FF                 	db	255
  2336                           
  2337                           ;Config register CONFIG1H @ 0x300001
  2338                           ;	Oscillator Selection bits
  2339                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  2340                           ;	Fail-Safe Clock Monitor Enable bit
  2341                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2342                           ;	Internal/External Oscillator Switchover bit
  2343                           ;	IESO = OFF, Two-Speed Start-up disabled
  2344  300001                     	org	3145729
  2345  300001  06                 	db	6
  2346                           
  2347                           ;Config register CONFIG2L @ 0x300002
  2348                           ;	Power-up Timer Enable bit
  2349                           ;	PWRT = OFF, PWRT disabled
  2350                           ;	Brown-out Reset Enable bits
  2351                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2352                           ;	Brown-out Voltage bits
  2353                           ;	BORV = 0x3, unprogrammed default
  2354  300002                     	org	3145730
  2355  300002  19                 	db	25
  2356                           
  2357                           ;Config register CONFIG2H @ 0x300003
  2358                           ;	Watchdog Timer
  2359                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2360                           ;	Watchdog Timer Postscale Select bits
  2361                           ;	WDTPS = 0xF, unprogrammed default
  2362  300003                     	org	3145731
  2363  300003  1E                 	db	30
  2364                           
  2365                           ;Config register CONFIG3L @ 0x300004
  2366                           ;	unspecified, using default values
  2367                           ;	Processor Data Memory Mode Select bits
  2368                           ;	MODE = 0x3, unprogrammed default
  2369                           ;	Address Bus Width Select bits
  2370                           ;	ADDRBW = 0x3, unprogrammed default
  2371                           ;	Data Bus Width Select bit
  2372                           ;	DATABW = 0x1, unprogrammed default
  2373                           ;	External Bus Data Wait Enable bit
  2374                           ;	WAIT = 0x1, unprogrammed default
  2375  300004                     	org	3145732
  2376  300004  F3                 	db	243
  2377                           
  2378                           ;Config register CONFIG3H @ 0x300005
  2379                           ;	CCP2 MUX bit
  2380                           ;	CCP2MX = 0x1, unprogrammed default
  2381                           ;	ECCP MUX bit
  2382                           ;	ECCPMX = 0x1, unprogrammed default
  2383                           ;	Low-Power Timer1 Oscillator Enable bit
  2384                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2385                           ;	MCLR Pin Enable bit
  2386                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  2387  300005                     	org	3145733
  2388  300005  83                 	db	131
  2389                           
  2390                           ;Config register CONFIG4L @ 0x300006
  2391                           ;	Stack Full/Underflow Reset Enable bit
  2392                           ;	STVREN = 0x1, unprogrammed default
  2393                           ;	Single-Supply ICSP Enable bit
  2394                           ;	LVP = OFF, Single-Supply ICSP disabled
  2395                           ;	Boot Block Size Select bits
  2396                           ;	BBSIZ = 0x0, unprogrammed default
  2397                           ;	Extended Instruction Set Enable bit
  2398                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2399                           ;	Background Debugger Enable bit
  2400                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  2401  300006                     	org	3145734
  2402  300006  81                 	db	129
  2403                           
  2404                           ; Padding undefined space
  2405  300007                     	org	3145735
  2406  300007  FF                 	db	255
  2407                           
  2408                           ;Config register CONFIG5L @ 0x300008
  2409                           ;	unspecified, using default values
  2410                           ;	Code Protection bit Block 0
  2411                           ;	CP0 = 0x1, unprogrammed default
  2412                           ;	Code Protection bit Block 1
  2413                           ;	CP1 = 0x1, unprogrammed default
  2414                           ;	Code Protection bit Block 2
  2415                           ;	CP2 = 0x1, unprogrammed default
  2416                           ;	Code Protection bit Block 3
  2417                           ;	CP3 = 0x1, unprogrammed default
  2418                           ;	Code Protection bit Block 4
  2419                           ;	CP4 = 0x1, unprogrammed default
  2420                           ;	Code Protection bit Block 5
  2421                           ;	CP5 = 0x1, unprogrammed default
  2422                           ;	Code Protection bit Block 6
  2423                           ;	CP6 = 0x1, unprogrammed default
  2424                           ;	Code Protection bit Block 7
  2425                           ;	CP7 = 0x1, unprogrammed default
  2426  300008                     	org	3145736
  2427  300008  FF                 	db	255
  2428                           
  2429                           ;Config register CONFIG5H @ 0x300009
  2430                           ;	unspecified, using default values
  2431                           ;	Boot Block Code Protection bit
  2432                           ;	CPB = 0x1, unprogrammed default
  2433                           ;	Data EEPROM Code Protection bit
  2434                           ;	CPD = 0x1, unprogrammed default
  2435  300009                     	org	3145737
  2436  300009  C0                 	db	192
  2437                           
  2438                           ;Config register CONFIG6L @ 0x30000A
  2439                           ;	unspecified, using default values
  2440                           ;	Write Protection bit Block 0
  2441                           ;	WRT0 = 0x1, unprogrammed default
  2442                           ;	Write Protection bit Block 1
  2443                           ;	WRT1 = 0x1, unprogrammed default
  2444                           ;	Write Protection bit Block 2
  2445                           ;	WRT2 = 0x1, unprogrammed default
  2446                           ;	Write Protection bit Block 3
  2447                           ;	WRT3 = 0x1, unprogrammed default
  2448                           ;	Write Protection bit Block 4
  2449                           ;	WRT4 = 0x1, unprogrammed default
  2450                           ;	Write Protection bit Block 5
  2451                           ;	WRT5 = 0x1, unprogrammed default
  2452                           ;	Write Protection bit Block 6
  2453                           ;	WRT6 = 0x1, unprogrammed default
  2454                           ;	Write Protection bit Block 7
  2455                           ;	WRT7 = 0x1, unprogrammed default
  2456  30000A                     	org	3145738
  2457  30000A  FF                 	db	255
  2458                           
  2459                           ;Config register CONFIG6H @ 0x30000B
  2460                           ;	unspecified, using default values
  2461                           ;	Configuration Register Write Protection bit
  2462                           ;	WRTC = 0x1, unprogrammed default
  2463                           ;	Boot Block Write Protection bit
  2464                           ;	WRTB = 0x1, unprogrammed default
  2465                           ;	Data EEPROM Write Protection bit
  2466                           ;	WRTD = 0x1, unprogrammed default
  2467  30000B                     	org	3145739
  2468  30000B  E0                 	db	224
  2469                           
  2470                           ;Config register CONFIG7L @ 0x30000C
  2471                           ;	unspecified, using default values
  2472                           ;	Table Read Protection bit Block 0
  2473                           ;	EBTR0 = 0x1, unprogrammed default
  2474                           ;	Table Read Protection bit Block 1
  2475                           ;	EBTR1 = 0x1, unprogrammed default
  2476                           ;	Table Read Protection bit Block 2
  2477                           ;	EBTR2 = 0x1, unprogrammed default
  2478                           ;	Table Read Protection bit Block 3
  2479                           ;	EBTR3 = 0x1, unprogrammed default
  2480                           ;	Table Read Protection bit Block 4
  2481                           ;	EBTR4 = 0x1, unprogrammed default
  2482                           ;	Table Read Protection bit Block 5
  2483                           ;	EBTR5 = 0x1, unprogrammed default
  2484                           ;	Table Read Protection bit Block 6
  2485                           ;	EBTR6 = 0x1, unprogrammed default
  2486                           ;	Table Read Protection bit Block 7
  2487                           ;	EBTR7 = 0x1, unprogrammed default
  2488  30000C                     	org	3145740
  2489  30000C  FF                 	db	255
  2490                           
  2491                           ;Config register CONFIG7H @ 0x30000D
  2492                           ;	unspecified, using default values
  2493                           ;	Boot Block Table Read Protection bit
  2494                           ;	EBTRB = 0x1, unprogrammed default
  2495  30000D                     	org	3145741
  2496  30000D  40                 	db	64
  2497                           tosu	equ	0xFFF
  2498                           tosh	equ	0xFFE
  2499                           tosl	equ	0xFFD
  2500                           stkptr	equ	0xFFC
  2501                           pclatu	equ	0xFFB
  2502                           pclath	equ	0xFFA
  2503                           pcl	equ	0xFF9
  2504                           tblptru	equ	0xFF8
  2505                           tblptrh	equ	0xFF7
  2506                           tblptrl	equ	0xFF6
  2507                           tablat	equ	0xFF5
  2508                           prodh	equ	0xFF4
  2509                           prodl	equ	0xFF3
  2510                           indf0	equ	0xFEF
  2511                           postinc0	equ	0xFEE
  2512                           postdec0	equ	0xFED
  2513                           preinc0	equ	0xFEC
  2514                           plusw0	equ	0xFEB
  2515                           fsr0h	equ	0xFEA
  2516                           fsr0l	equ	0xFE9
  2517                           wreg	equ	0xFE8
  2518                           indf1	equ	0xFE7
  2519                           postinc1	equ	0xFE6
  2520                           postdec1	equ	0xFE5
  2521                           preinc1	equ	0xFE4
  2522                           plusw1	equ	0xFE3
  2523                           fsr1h	equ	0xFE2
  2524                           fsr1l	equ	0xFE1
  2525                           bsr	equ	0xFE0
  2526                           indf2	equ	0xFDF
  2527                           postinc2	equ	0xFDE
  2528                           postdec2	equ	0xFDD
  2529                           preinc2	equ	0xFDC
  2530                           plusw2	equ	0xFDB
  2531                           fsr2h	equ	0xFDA
  2532                           fsr2l	equ	0xFD9
  2533                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      70
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_updateDisplay
    _updateGameDisplay->___lwdiv
    _updateDisplay->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _HandleInterrupt in COMRAM

    _HandleInterrupt->i2_updateDisplay
    i2_updateDisplay->i2___lwmod
    i2___lwmod->i2___lwdiv
    _processTimerTick->_moveHippoDown

Critical Paths under _main in BANK0

    None.

Critical Paths under _HandleInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HandleInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HandleInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HandleInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HandleInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HandleInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HandleInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HandleInterrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HandleInterrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HandleInterrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HandleInterrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HandleInterrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HandleInterrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HandleInterrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HandleInterrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HandleInterrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2610
                                             40 COMRAM     3     3      0
                     _initializeGame
                   _initializeSystem
                      _updateDisplay
                  _updateGameDisplay
 ---------------------------------------------------------------------------------
 (1) _updateGameDisplay                                    6     6      0     911
                                             30 COMRAM     6     6      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _updateDisplay                                        5     5      0    1653
                                             35 COMRAM     5     5      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                             30 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                             23 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initializeSystem                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initializeGame                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _HandleInterrupt                                      6     6      0     801
                                             17 COMRAM     6     6      0
                        _moveHippoUp
                   _processTimerTick
                    i2_updateDisplay
 ---------------------------------------------------------------------------------
 (4) i2_updateDisplay                                      5     5      0     801
                                             12 COMRAM     5     5      0
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (5) i2___lwmod                                            5     1      4     367
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) i2___lwdiv                                            7     3      4     318
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _processTimerTick                                     0     0      0       0
                   _checkPrizeCaught
                  _completeSoftReset
                      _moveHippoDown
                          _softReset
 ---------------------------------------------------------------------------------
 (5) _softReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _moveHippoDown                                        4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) _completeSoftReset                                    0     0      0       0
                          _hardReset
 ---------------------------------------------------------------------------------
 (6) _hardReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _checkPrizeCaught                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _moveHippoUp                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initializeGame
   _initializeSystem
   _updateDisplay
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _updateGameDisplay
     ___lwdiv

 _HandleInterrupt (ROOT)
   _moveHippoUp
   _processTimerTick
     _checkPrizeCaught
     _completeSoftReset
       _hardReset
     _moveHippoDown
     _softReset
   i2_updateDisplay
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      46       1       74.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      46      32        0.0%
DATA                 0      0      46       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Apr 24 15:40:39 2025

   __size_ofi2_updateDisplay 0136                           l43 1782                           l46 161A  
                         l55 1140                           l66 144A           i2___lwdiv@dividend 0001  
                        l115 1722                          l620 1538                          l613 1530  
                        l630 167E                          l623 1676                          l901 173E  
                        l911 177A                          l903 175E                          l913 177C  
                        l905 1760                          l915 177E                          l907 1762  
                        l917 1780                          l909 1770                          l919 15AE  
                        u400 14E0                          u401 14DC                          u410 14FE  
                        u411 14FA                          u420 151A                          u421 1516  
                        u430 162E                          u431 162A                          u440 164C  
                        u441 1648                          u450 1662                          u530 13B6  
                        u451 165E                          u531 13B2                          u524 1130  
                        u540 13D6                          u525 112C                          u541 13D2  
                        u630 1722                          u631 171E                          u560 1406  
                        u561 1402                          u570 1416                          u554 13E8  
                        u571 1412                          u555 13E4                          u580 143C  
                        u581 1438                          u647 16FE                          u657 172E  
                        wreg 000FE8                         l1101 1522                         l1103 1524  
                       l1111 1636                         l1105 152A                         l1121 1670  
                       l1113 163E                         l1201 1406                         l1115 164C  
                       l1107 161C                         l1203 1416                         l1211 1446  
                       l1117 1662                         l1109 162E                         l1205 142E  
                       l1119 166A                         l1207 143C                         l1161 100C  
                       l1209 1442                         l1091 14E8                         l1171 109C  
                       l1163 1010                         l1093 14F0                         l1085 14C6  
                       l1181 113A                         l1165 1020                         l1095 14FE  
                       l1087 14CE                         l1167 103C                         l1175 10CC  
                       l1191 13B8                         l1271 170C                         l1097 1504  
                       l1089 14E0                         l1169 106C                         l1177 1106  
                       l1193 13C0                         l1273 1724                         l1265 16F4  
                       l1257 16E4                         l1099 151A                         l1179 111E  
                       l1195 13D6                         l1187 13A2                         l1275 1728  
                       l1267 16F8                         l1259 16EC                         l1285 10E0  
                       l1197 13F2                         l1189 13B6                         l1269 1708  
                       l1199 13F4                         i2l70 1888                         i2l55 1276  
                       i2l80 1848                         i2l74 1800                         i2l83 1826  
                       i2l77 1874                         i2l88 17C2                         i2l96 1342  
           ??_initializeGame 0018               ?_updateDisplay 0001                         _main 16E4  
         i2___lwdiv@quotient 0005                         fsr2h 000FDA                         fsr2l 000FD9  
                       btemp 0047                         start 000E                 ___param_bank 000000  
                      ?_main 0001                        _T0CON 000FD5              __end_of___lwdiv 153A  
                      i2l101 13A0              __end_of___lwmod 1680                        i2l109 14AA  
                      i2l620 15AC                        i2l613 15A4                        i2l630 16E2  
                      i2l623 16DA                        i2l801 17FE                        i2l803 1860  
                      i2l811 1838                        i2l821 179E                        i2l813 1840  
                      i2l823 17B2                        i2l815 1784                        i2l807 1828  
                      i2l817 1786                        i2l809 1834                        i2l819 1796  
                      i2l795 1802                        i2l973 1876                        i2l797 1816  
                      i2l981 1294                        i2l975 1886                        i2l799 17C4  
                      i2l991 12F2                        i2l983 12B2                        i2l993 12FA  
                      i2l985 12D0                        i2l977 1278                        i2l995 1302  
                      i2l987 12D8                        i2l979 1284                        i2l997 1318  
                      i2l989 12EE                        i2l999 132E                        _TMR0H 000FD7  
                      _TMR0L 000FD6                        _PORTD 000F83                        _PORTH 000F87  
                      _PORTJ 000F88                        _TRISB 000F93                        _TRISD 000F95  
                      _TRISH 000F99                        _TRISJ 000F9A                        main@i 002A  
                      tablat 000FF5                        ttemp5 0048                        ttemp6 004B  
                      ttemp7 004F                        status 000FD8                        wtemp8 0048  
         __size_ofi2___lwdiv 0074           __size_ofi2___lwmod 0064              __initialization 184A  
               __end_of_main 173E    __size_of_processTimerTick 012A        __end_of_moveHippoDown 1802  
          ??_HandleInterrupt 0012                       ??_main 0029                __activetblptr 000003  
          ??i2_updateDisplay 000D  updateGameDisplay@blinkCycle 0021                 ?_moveHippoUp 0001  
   __end_of_checkPrizeCaught 1876                       _ADCON1 000FC1              ??_updateDisplay 0024  
                     i2l1001 133A                       i2l1011 139C                       i2l1003 134A  
                     i2l1005 135E                       i2l1007 1366                       i2l1009 1376  
                     i2l1131 1564                       i2l1123 153A                       i2l1141 1598  
                     i2l1133 1572                       i2l1125 1542                       i2l1221 11A2  
                     i2l1213 1142                       i2l1143 159E                       i2l1135 1578  
                     i2l1127 1554                       i2l1151 16A2                       i2l1231 1254  
                     i2l1223 11D2                       i2l1215 1146                       i2l1137 158E  
                     i2l1129 155C                       i2l1153 16B0                       i2l1145 1680  
                     i2l1233 1270                       i2l1217 1156                       i2l1241 1474  
                     i2l1139 1596                       i2l1155 16C6                       i2l1147 1692  
                     i2l1219 1172                       i2l1227 1202                       i2l1251 14A0  
                     i2l1243 1484                       i2l1157 16CE                       i2l1149 169A  
                     i2l1229 123C                       i2l1253 14A4                       i2l1245 1488  
                     i2l1159 16D4                       i2l1255 14A8                       i2l1247 148A  
                     i2l1239 1466                       i2l1249 1498                       i2l1287 1216  
                     i2u1_40 17FE                       i2u1_41 17FA                       i2u2_40 1872  
                     i2u2_41 186C                       i2u3_40 1874                       i2u4_40 1796  
                     i2u4_41 1792            ?_initializeSystem 0001           ??_initializeSystem 0018  
         updateGameDisplay@i 0024          _currentDisplayIndex 0046                    ??___lwdiv 001C  
                  ??___lwmod 0023                       clear_0 1850                       _timers 002C  
          __end_ofi2___lwdiv 15AE                 __mediumconst 0000            __end_ofi2___lwmod 16E4  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                 __accesstop 0060      __end_of__initialization 1856                ___rparam_used 000001  
          _completeSoftReset 1784           i2___lwmod@dividend 0008               __pcstackCOMRAM 0001  
         ?_completeSoftReset 0001          ??_completeSoftReset 0001           __size_of_hardReset 0026  
  __end_of_completeSoftReset 17C4             _processTimerTick 1278           __size_of_softReset 0022  
                    i2u30_40 1318                      i2u30_41 1314                      i2u31_40 132E  
                    i2u31_41 132A                      i2u24_40 1886                      i2u32_40 135E  
                    i2u24_41 1882                      i2u32_41 135A                      i2u33_40 1376  
                    i2u25_40 1294                      i2u33_41 1372                      i2u25_41 1290  
                    i2u34_40 139C                      i2u26_40 12B2                      i2u50_40 16B0  
                    i2u34_41 1398                      i2u26_41 12AE                      i2u50_41 16AC  
                    i2u27_40 12C4                      i2u51_40 16C6                      i2u27_41 12BE  
                    i2u51_41 16C2                      i2u28_40 12C6                      i2u60_40 1474  
                    i2u60_41 1470                      i2u29_40 12EE                      i2u61_40 1484  
                    i2u29_41 12EA                      i2u61_41 1480                      i2u46_40 1554  
                    i2u62_40 1498                      i2u46_41 1550                      i2u62_41 1494  
                    i2u47_40 1572                      i2u47_41 156E                      i2u48_40 158E  
                    i2u48_41 158A                      i2u49_40 1692                      i2u49_41 168E  
                    i2u59_44 1266                      i2u59_45 1262         __size_of_moveHippoUp 0014  
            _HandleInterrupt 0008            __end_of_hardReset 1828                      __Hparam 0000  
                    __Lparam 0000              i2_updateDisplay 1142                      ___lwdiv 14C6  
                    ___lwmod 161C                 __psmallconst 1000                      __pcinit 184A  
                    __ramtop 1000                      __ptext0 16E4                      __ptext1 13A2  
                    __ptext2 100C                      __ptext3 161C                      __ptext4 14C6  
                    __ptext5 173E                      __ptext6 15AE                      __ptext8 1142  
                    __ptext9 1680                    _T0CONbits 000FD5            ?_checkPrizeCaught 0001  
             __pintcode_body 144C         end_of_initialization 1856           ??_checkPrizeCaught 0001  
                    int_func 144C             _SEVEN_SEG_DIGITS 1001   __size_of_completeSoftReset 0040  
          __end_of_softReset 184A      __size_of_initializeGame 006E                      postdec2 000FDD  
                    postinc0 000FEE                      postinc2 000FDE    __size_of_initializeSystem 0046  
    __end_of_HandleInterrupt 14C6            i2___lwdiv@divisor 0003                    i2___lwdiv 153A  
                  i2___lwmod 1680            i2___lwdiv@counter 0007        __end_of_updateDisplay 1142  
     __size_of_moveHippoDown 003E      __end_ofi2_updateDisplay 1278          start_initialization 184A  
   __end_of_processTimerTick 13A2                   ?i2___lwdiv 0001                   ?i2___lwmod 0008  
         updateDisplay@digit 0026           updateDisplay@score 0027                _moveHippoDown 17C4  
                __pbssCOMRAM 002C            i2___lwmod@divisor 000A            i2___lwmod@counter 000C  
          _updateGameDisplay 13A2             ?_HandleInterrupt 0001           ?_updateGameDisplay 0001  
           ?i2_updateDisplay 0001          ??_updateGameDisplay 001F             ___lwdiv@dividend 0018  
                  _gameState 003A               _initializeGame 15AE                    __pintcode 0008  
                  _hardReset 1802               ?_moveHippoDown 0001                     ?___lwdiv 0018  
                   ?___lwmod 001F             _initializeSystem 173E     __end_of_SEVEN_SEG_DIGITS 100B  
                __smallconst 1000    __end_of_updateGameDisplay 144C                ??_moveHippoUp 0001  
           ___lwdiv@quotient 001C                  ??i2___lwdiv 0005                  ??i2___lwmod 000C  
     __end_of_initializeGame 161C                     _RCONbits 000FD0    __size_of_checkPrizeCaught 0016  
                 ?_hardReset 0001                    _softReset 1828                  _INTCON2bits 000FF1  
        __end_of_moveHippoUp 188A              ?_initializeGame 0001                     __Hrparam 0000  
                   __Lrparam 0000              ??_moveHippoDown 0001         updateGameDisplay@pos 0023  
                 ?_softReset 0001             __size_of___lwdiv 0074             __size_of___lwmod 0064  
 __size_of_updateGameDisplay 00AA     updateGameDisplay@display 0022              ___lwdiv@divisor 001A  
            ___lwdiv@counter 001E                     __ptext10 153A                     __ptext11 1278  
                   __ptext12 1828                     __ptext13 17C4                     __ptext14 1784  
                   __ptext15 1802                     __ptext16 1860                     __ptext17 1876  
          ?_processTimerTick 0001           ??_processTimerTick 0005                __size_of_main 005A  
                ??_hardReset 0001                     int$flags 0047       __size_of_updateDisplay 0136  
                 _INTCONbits 000FF2                  _moveHippoUp 1876                     intlevel2 0000  
           ___lwmod@dividend 001F     __end_of_initializeSystem 1784             _checkPrizeCaught 1860  
                ??_softReset 0001              ___lwmod@divisor 0021              ___lwmod@counter 0023  
              _updateDisplay 100C         i2updateDisplay@digit 000F     __size_of_HandleInterrupt 14BE  
       i2updateDisplay@score 0010  
